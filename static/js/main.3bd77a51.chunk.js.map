{"version":3,"sources":["components/Reference/1.svg","components/Reference/2.svg","components/Reference/3.svg","components/Header/brtf_full-color.png","components/Header/NavBar.js","components/Header/Header.js","components/ProtocolsPage/ProtocolPage.js","components/ScheduleReview/ListView.js","components/ScheduleReview/ParentView.js","components/InitialData/InitialData.js","components/HomePage/HomePage.js","components/Help/AbbreviationTable.js","components/Help/DetectionInseminationTypes.js","components/Help/BreedingTime.js","components/Help/Help.js","components/Reference/Reference.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","style","color","Header","backgroundColor","src","cow","alt","ProtocolPage","props","UserFlow","setUserFlow","BreedType","CowOrHeifer","SemenType","SystemType","SynchronizationProtocol","setSynchronizationProtocol","preferredList","LesspreferredList","OverallList","useState","HideLesspreferredList","setHideLesspreferredList","push","Button","margin","onClick","variant","size","undefined","swal","icon","FormControl","FormControlLabel","control","Checkbox","onChange","event","checked","target","defaultChecked","label","InputLabel","Select","value","map","jsonKey","index","key","SynchProtocolTitleData","SynchronizationSystemTitle","ListView","ListOfInstrucitons","DateToStartBreeding","GNRH","PG","showTimes","setShowTimes","showMilitaryTime","setShowMilitaryTime","leadingZeroesMinutes","DateObject","getMinutes","addPGtoSteps","text","replace","pginfo","addGNRHtoSteps","gnrhinfo","addTimedEventstoSteps","dateObject","includes","plusTimeEdit","indexOf","timeAdjustment","analysis","substring","getHours","parseInt","instruction","hours","tempDate","Date","setDate","getDate","OnDay","getMonth","getFullYear","toString","step1","step2","step3","step4","step5","step6","ics","require","FileSaver","ParentView","BullTurnIn","GestationPeriod","ProtocolInstructions","BullTurnInDict","TempIndex","i","length","splice","listOfEvents","description","eventDictionary","ProtocolEventDate","createEvents","error","console","log","file","File","type","saveAs","downloadICS","window","print","InitialData","setBreedType","setSemenType","setCowOrHeifer","setSystemType","setDateToStartBreeding","setGNRH","setPG","setBullTurnIn","setGestationPeriod","border","borderColor","borderRadius","padding","utils","DateFnsUtils","format","textAlign","GetAnticipatedCalvingDate","Object","keys","CowOrHeiferData","SemenTypeData","BreedTypeData","SystemTypeData","GNRHData","PGData","HomePage","AbbreviationsTable","AbbreviationsData","item","DetectionIneminationTypes","DIT","BreedingTime","Help","AbbreviationCollapse","setAbbreviationCollapse","component","to","Reference","BPSize","setBPSize","SSPSize","setSSPSize","HPSize","setHPSize","EnlargeBP","EnlargeHP","EnlargeSSP","img1","img2","img3","App","basename","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3bd77a51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.080517c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.2e1d6411.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.b06961fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/brtf_full-color.6eee08a4.png\";","\n\n/**\n * Header.js\n */\nimport React from 'react';\nimport './Header.css';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n /**\n  * The header that is always fixed to the top of the page\n  */\n const NavBar = () =>\n {\n     return (\n         <>\n\n\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container>\n                <Navbar.Brand href=\"#home\"></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link style={{color:'blue'}} href=\"/\">Home</Nav.Link>\n                        <Nav.Link style={{color:'blue'}} href=\"/reference\">References</Nav.Link>\n                        <Nav.Link style={{color:'blue'}} href=\"https://www.facebook.com/beefrepro/\">Facebook</Nav.Link>\n                        <Nav.Link  style={{color:'blue'}} href=\"https://twitter.com/beef_repro\">Twitter</Nav.Link>\n                        <Nav.Link  style={{color:'blue'}} href=\"https://www.youtube.com/channel/UCLpZWNMIXm83qfMU-kqu_uA?view_as=subscriber\">YouTube</Nav.Link>\n                        <Nav.Link style={{color:'blue'}} href=\"/help\">Help</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n              </Container>\n        </Navbar>\n\n         </>\n     );\n }\n \n export default NavBar;","/**\n * Header.js\n */\nimport React from 'react';\nimport cow from'./brtf_full-color.png';\nimport './Header.css';\nimport NavBar from './NavBar';\n\n/**\n * The header that is always fixed to the top of the page\n */\nfunction Header()\n{\n    return (\n        <div className=\"noprint\">\n            <div style={{backgroundColor: \"#eeeeee\"}}>\n                <a href=\"https://beefrepro.org/\">\n                <img src={cow} alt=\"moo\"/>\n                </a>\n            </div>\n\n            <NavBar/>\n        </div>\n    );\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport { Button } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport SynchProtocolTitleData from \"./SynchronozationProtocolTitles.json\"\nimport swal from 'sweetalert';\n\nconst ProtocolPage = props => {\n    const {\n        UserFlow, setUserFlow, \n        BreedType, CowOrHeifer, SemenType,\n        SystemType, SynchronizationProtocol, setSynchronizationProtocol \n    } = props;\n    \n    let preferredList = [];\n    let LesspreferredList = [];\n    let OverallList = []\n\n    const [HideLesspreferredList, setHideLesspreferredList] = useState(false);\n\n    //Cow Prefferd #1\n    const CP1 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V39\n            preferredList.push(7)\n        }\n        else{\n            if(BreedType === 1 && SystemType === 2){\n                //V48\n                preferredList.push(16)\n            }\n            else{\n                if(BreedType === 1 && SystemType === 3){\n                    //V54\n                    preferredList.push(22)\n                }\n                else{\n                    if(BreedType === 1 && SemenType === 1 && SystemType === 4){\n                        //V72\n                        preferredList.push(40)\n                    }\n                    else{\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 4){\n                            //V76\n                            preferredList.push(44)\n                        }\n                        else{\n                            if(BreedType === 2 && SemenType === 1 && SystemType === 3){\n                                //V69\n                                preferredList.push(37)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //Cow Prefferd #2\n    const CP2 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V46\n            preferredList.push(14)\n        }\n        else{\n            if(BreedType === 1 && SystemType === 2){\n                //V51\n                preferredList.push(19)\n            }\n            else{\n                if(BreedType === 1 && SystemType === 3){\n                    //V61\n                    preferredList.push(29)\n                }\n            }\n        }\n    }\n\n    //Cow Prefferd #3\n    const CP3 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V66\n            preferredList.push(34)\n        }\n        else{\n            if(BreedType === 1 && SystemType === 2){\n                //V65\n                preferredList.push(33)\n            }\n        }\n    }\n\n    //Cow Less Prefferd #1\n    const CLPS1 = () => {\n\n        if(BreedType === 1 && SystemType === 1){\n            //V33\n            LesspreferredList.push(1)\n        }\n        else{\n            if(BreedType === 1 &&  SystemType === 2){\n                //V57\n                LesspreferredList.push(25)\n            }\n            else{\n                if(BreedType === 1 && SemenType === 1 && SystemType === 3){\n                    //V42\n                    LesspreferredList.push(10)\n                }\n                else{\n                    if(BreedType === 1 && SemenType === 2 && SystemType === 1){\n                        //V39\n                        LesspreferredList.push(7)\n                    }\n                    else{\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 2){\n                            //V48\n                            LesspreferredList.push(16)\n                        }\n                        else{\n                            if(BreedType === 1 && SemenType === 2 && SystemType === 3){\n                                //V71\n                                LesspreferredList.push(39)\n                            }\n                            else{\n                                if(BreedType === 2){\n                                    //AC33\n                                    if(SemenType === 1 && SystemType === 1){\n                                        //V39\n                                        LesspreferredList.push(7)\n                                    }\n                                    else{\n                                        if(SemenType === 1 && SystemType === 2){\n                                            //V48\n                                            LesspreferredList.push(16)\n                                        }\n                                        else{\n                                            if(SemenType === 1 && SystemType === 3){\n                                                //V54\n                                                LesspreferredList.push(22)\n                                            }\n                                            else{\n                                                if(SemenType === 2 && SystemType === 3){\n                                                    //V69\n                                                    LesspreferredList.push(37)\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //Cow Less preferred #2\n    const CLPS2 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V34\n            LesspreferredList.push(2)\n        }\n        else{\n            if(BreedType === 1 && SemenType === 1 && SystemType === 3){\n                //V45\n                LesspreferredList.push(13)\n            }\n            else{\n                if(BreedType === 1 && SemenType === 2 && SystemType === 1){\n                //V46\n                LesspreferredList.push(14)\n                }\n                else{\n                    if(BreedType === 1 && SemenType === 2 && SystemType === 2){\n                        //Blank\n                    }\n                    else{\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 3){\n                            //Blank\n                        }\n                        else{\n                            if(BreedType === 2){\n                                //AC34\n                                if(SemenType === 1 && SystemType === 1){\n                                    //V46\n                                    LesspreferredList.push(14)\n                                }\n                                else{\n                                    if(SemenType === 1 && SystemType === 2){\n                                        //V51\n                                        LesspreferredList.push(19)\n                                    }\n                                    else{\n                                        if(SemenType === 1 && SystemType === 3){\n                                            //V61\n                                            LesspreferredList.push(29)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //Cow Less preferred #3\n    const CLPS3 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V35\n            LesspreferredList.push(3)\n        }\n        else{\n            if(BreedType === 1 && SemenType === 1 && SystemType === 3){\n                //V67\n                LesspreferredList.push(35)\n            }\n            else{\n                if(BreedType === 1 && SemenType === 2 && SystemType === 1){\n                    //V66\n                    LesspreferredList.push(34)\n                }\n                else{\n                    if(BreedType === 2){\n                        //AC35\n                        if(SemenType === 1 && SystemType === 1){\n                            //V66\n                            LesspreferredList.push(34)\n                        }\n                        else{\n                            if(SemenType === 1 && SystemType === 2){\n                            //V65\n                            LesspreferredList.push(33)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } \n\n    //Cow Less preferred #4\n    const CLPS4 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V47\n            LesspreferredList.push(15)\n        }\n        else{\n            if(BreedType === 1 && SemenType === 1 && SystemType === 3){\n                //V71\n                LesspreferredList.push(39)\n            }\n        }\n    }\n\n    //Heifer preferred System #1\n    const HP1 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V33\n            preferredList.push(1)\n        }\n        else{\n            if(BreedType === 1 && SystemType === 2){\n                //V48\n                preferredList.push(16)\n            }\n            else{\n                if(BreedType === 1 && SemenType === 1 && SystemType === 3 ){\n                    //V55\n                    preferredList.push(23)\n                }\n                else{\n\n                    if(BreedType === 1 && SemenType === 1 && SystemType === 4 ){\n                        //V73\n                        preferredList.push(41)\n                    }\n                    else{\n\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 4 ){\n                            //76\n                            preferredList.push(44)\n                        }\n                        else{\n                            if(BreedType === 1 && SemenType === 2 && SystemType === 3 ){\n                                //74\n                                preferredList.push(42)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //Heifer preferred System #2\n    const HP2 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V38\n            preferredList.push(6)\n        }\n        else {\n            if(BreedType === 1 && SystemType === 2){\n                //V58\n                preferredList.push(26)\n            }\n            else{\n                if(BreedType === 1 && SystemType === 3){\n                    //V59\n                    preferredList.push(27)\n                }\n                else{\n                    if(BreedType === 1 && SystemType === 4){\n                        //V77\n                        preferredList.push(45)\n                    }\n                }\n            }\n        }\n    }\n\n    //Heifer preferred System #3\n    const HP3 = () => {\n        if(BreedType === 1 && SystemType === 1){\n            //V47\n            preferredList.push(15)\n        }\n        else {\n            if(BreedType === 1 && SystemType === 2){\n                //V63\n                preferredList.push(31)\n            }\n            else{\n                if(BreedType === 1 && SystemType === 3){\n                    //V64\n                    preferredList.push(32)\n                }\n                else{\n                    if(BreedType === 1 && SystemType === 4){\n                        //78\n                        preferredList.push(46)\n                    }\n                }\n            }\n        }\n    }\n    \n    //Heifer preferred System #4\n    const HP4 = () => {\n        if(BreedType === 1 && SystemType === 3){\n            //V70\n            preferredList.push(38)\n        }\n        else{\n            if(BreedType === 1 && SystemType === 4){\n                //V79\n                preferredList.push(47)\n            }\n        }\n    }\n    \n    //Heifer preferred System #5\n    const HP5 = () => {\n        if(BreedType === 1 && SemenType === 2 && SystemType === 3){\n            //V75\n            preferredList.push(43)\n        }\n    }\n\n    //Heifer Less preferred System #1\n    const HLPS1 = () => {\n        if(BreedType === 1 && SemenType === 1){\n            //AC46\n            if(SystemType === 1){\n                //V35\n                LesspreferredList.push(3)\n            }\n            else{\n                if(SystemType === 3){\n                    //V60\n                    LesspreferredList.push(28)\n                }\n            }\n        }\n        else{\n            if(BreedType === 2){\n                //AC39\n                if(SystemType === 1){\n                    //V33\n                    LesspreferredList.push(1)\n                }\n                else{\n                    if(SystemType === 2){\n                        //V48\n                        LesspreferredList.push(16)\n                    }\n                    else{\n                        if(SystemType === 3){\n                            //V55\n                            LesspreferredList.push(23)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //Heifer Less preferred System #2\n    const HLPS2 = () => {\n        if(BreedType === 1 && SemenType === 1){\n            //AC47\n            if(SystemType === 1){\n                //V44\n                LesspreferredList.push(12)\n            }\n            else{\n                if(SystemType === 3){\n                    //V68\n                    LesspreferredList.push(36)\n                }\n            }\n        }\n        else{\n            if(BreedType === 2){\n                //AC40\n                if(SystemType === 1){\n                    //V38\n                    LesspreferredList.push(6)\n                }\n                else{\n                    if(SystemType === 2){\n                        //V58\n                        LesspreferredList.push(26)\n                    }\n                    else{\n                        if(SystemType === 3){\n                            //V59\n                            LesspreferredList.push(27)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //Heifer Less preferred System #3\n    const HLPS3 = () => {\n        if(BreedType === 1 && SemenType === 1 ){ \n            //AC48\n            if(SystemType === 1){\n                //V46\n                LesspreferredList.push(14)\n            }\n            else{\n                if(SystemType === 3){\n                    //V75\n                    LesspreferredList.push(43)\n                }\n            }\n        }\n        else{\n            if(BreedType === 2){\n                //AC41\n                if(SystemType === 1){\n                    //V47\n                    LesspreferredList.push(15)\n                }\n                else{\n                    if(SystemType === 2 ){\n                        //V63\n                        LesspreferredList.push(31)\n                    }\n                    else{\n                        if(SystemType === 3) {\n                            //V64\n                            LesspreferredList.push(32)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //Heifer Less preferred System #4\n    const HLPS4 = () => {\n        if(BreedType === 1 && SemenType === 1){\n            //AC49\n            if( SystemType === 1){\n                //V62\n                LesspreferredList.push(30)\n            }\n        }\n        else{\n            if(BreedType === 2){\n                //AC42\n                if(SystemType === 1){\n                    //V62\n                    LesspreferredList.push(30)\n                }\n                else{\n                    if(SystemType === 3){\n                        //V69\n                        LesspreferredList.push(37)\n                    }\n                }\n            }\n        }\n    } \n\n    const filterProtocols = () => {\n        //If working with Cows\n        if(CowOrHeifer === 1){\n            //7 possible additions\n            //preferred Systems\n            CP1();\n            CP2();\n            CP3();\n\n            //Less preferred Systems\n            CLPS1();\n            CLPS2();\n            CLPS3();\n            CLPS4();\n        }\n        \n        //If working with Heifers\n        if(CowOrHeifer === 2){\n            //9 possible additions\n            //preferred Systems\n            HP1();\n            HP2();\n            HP3();\n            HP4();\n            HP5();\n\n            //Less preferred Systems\n            HLPS1();\n            HLPS2();\n            HLPS3();\n            HLPS4();\n        }\n        OverallList = [...preferredList, ...LesspreferredList]\n    }\n\n    filterProtocols();\n\n    const CheckDataAndSubmit = () =>\n    {\n        if( SynchronizationProtocol === undefined ){\n            swal( \"Select a Protocol to Continue\",{\n                icon: \"error\",\n              });\n        }\n        else{\n            setUserFlow(UserFlow + 1)\n        }\n    }\n\n    const handleCheckboxClick = (checked) => {\n        setHideLesspreferredList(checked)\n    }\n\n    return (\n        \n        <div>\n            <Button \n                style={{margin: \"20px\"}}\n                onClick = {() => {setUserFlow(UserFlow -1)}}\n                variant   = \"contained\" \n                size      = \"large\"\n            >\n            Back\n            </Button>\n\n            <Button \n                onClick = {() => {CheckDataAndSubmit()}}\n                variant   = \"contained\" \n                size      = \"large\"\n            >\n            Submit\n            </Button>\n\n\n            <br />\n            <br />\n            <FormControl variant='outlined' >\n            <FormControlLabel \n                control={\n                    <Checkbox \n                        onChange={event => {\n                            handleCheckboxClick(event.target.checked)\n                        }}\n                        defaultChecked = {HideLesspreferredList}\n                    />}\n                label=\"Hide Less Preferred Protocols\" />\n\n            </FormControl>\n            <br />\n            <br />\n\n            {/* Select Protocol */}\n            <FormControl variant = \"outlined\" >\n                <InputLabel>Select Protocol</InputLabel>\n                <Select \n                    className=\"InputStyle\"\n                    value    = { SynchronizationProtocol || undefined  } \n                    onChange ={ ( event ) => {setSynchronizationProtocol(event.target.value)}} \n                >\n                    { HideLesspreferredList ? preferredList.map( (jsonKey, index) => {\n                        return <option key={index} value={jsonKey} >{SynchProtocolTitleData[jsonKey].SynchronizationSystemTitle}</option>      \n                    }) :\n                    OverallList.map( (jsonKey, index) => {\n                        return <option key={index} value={jsonKey} >{SynchProtocolTitleData[jsonKey].SynchronizationSystemTitle}</option>      \n                    })\n                     }\n                    \n                    \n                </Select>\n            </FormControl>\n            <br />\n            <br />\n\n\n        </div>\n    );\n} /* end ProtocolPage */\n\nexport default ProtocolPage;","import React, { useState } from 'react';\nimport \"./ListView.css\"\nimport pginfo from  \"./pginfo.json\"\nimport gnrhinfo from  \"./gnrhinfo.json\"\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst ListView = props => {\n    const { ListOfInstrucitons, DateToStartBreeding, SynchronizationProtocol, GNRH, PG} = props;\n    const [showTimes, setShowTimes] = useState(false)\n    const [showMilitaryTime, setShowMilitaryTime] = useState(false)\n\n    const handleMilitaryCheckbox = (checked) => {\n        setShowMilitaryTime(checked)\n    }\n    \n    const handleTimeCheckbox = (checked) => {\n        setShowTimes(checked)\n    }\n\n    //Legibility edits\n    const leadingZeroesHours = (DateObject) =>{\n        return (DateObject.getHours() < 10 ? '0' : '') + DateObject.getHours();\n    }\n\n    //Legibility edits\n    const leadingZeroesMinutes = (DateObject) =>{\n        return (DateObject.getMinutes() < 10 ? '0' : '') + (DateObject.getMinutes());\n    }\n\n    //String replace for PG's\n    const addPGtoSteps = (text) =>{\n        if(text === undefined){return ''}\n        return(text.replace(\"${PG}\", pginfo[PG]))\n    }\n    \n    //String replace for GNRH's\n    const addGNRHtoSteps = (text) =>{    \n        if(text === undefined){return ''}    \n        return(text.replace(\"${GNRH}\", gnrhinfo[GNRH]))\n    }\n\n    //String.Includes() looks for TimeEdit code in JSON protocol instructions and returns the appropriate time\n    const addTimedEventstoSteps = (text, dateObject) =>{    \n        if(text === undefined){return ''}   \n        if(text.includes(\"${Time-Edit}\")){\n            \n            let plusTimeEdit = text.indexOf(\":+:\");\n            let timeAdjustment = undefined;\n          \n           if (plusTimeEdit !== -1){\n                let analysis = text.substring(plusTimeEdit + 3)\n                timeAdjustment = dateObject.getHours() + parseInt(analysis);\n                return (`${timeAdjustment}:${leadingZeroesMinutes(dateObject)}`)\n            }\n        }\n        return(text)\n    }\n\n    const getClockHours = (hours) =>{\n            if(hours > 12){\n                return (hours % 12);\n            }\n\n        return hours\n    }\n\n    return (\n        <>\n        <br/>\n            <h2>Protocol #{SynchronizationProtocol}</h2>\n            <div className=\"noprint\">\n            <FormControl variant='outlined' >\n                <FormControlLabel \n                control={\n                    <Checkbox \n                        onChange={event => {\n                            handleTimeCheckbox(event.target.checked)\n                        }}\n                        defaultChecked = {showTimes}\n                    />}\n                label=\"Hide Times\" />\n            </FormControl>\n            <br />\n            <br />\n            <FormControl variant='outlined' >\n                <FormControlLabel \n                    control={\n                        <Checkbox \n                            onChange={event => {\n                            handleMilitaryCheckbox(event.target.checked)\n                        }}\n                        defaultChecked = {showMilitaryTime}\n                    />}\n                    label=\"Convert Time to Military\" />\n            </FormControl>\n            <br />\n            <br />\n            \n            </div>\n            \n            <div className=\"centerTable\">\n\n            <table  >\n                <tr>\n                    <th>Date and Time</th>\n                    <th>Instructions</th>\n                </tr>\n                {ListOfInstrucitons.map(instruction => {\n                    let tempDate = new Date(DateToStartBreeding)\n                    \n                    tempDate.setDate(DateToStartBreeding.getDate() + parseInt(instruction.OnDay))\n\n                    return(\n                        <tr >\n                            <td> {tempDate.getMonth() + 1} / { tempDate.getDate() } / { tempDate.getFullYear()} \n                            <br/>\n                             {!showTimes ?\n                                <> \n                                    {!showMilitaryTime ? \n                                    <>\n                                     {getClockHours(tempDate.getHours()).toString() }:{tempDate.getMinutes().toString()} {(tempDate.getHours() > 11)? \"PM\" : \"AM\"}\n                                    </>\n                                       \n                                        :\n                                        leadingZeroesHours(tempDate).toString() + leadingZeroesMinutes(tempDate).toString()\n                                    }\n                                </>\n                                : <></>}  </td>\n                            <td>\n                            <br/>\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step1)), tempDate )}<br/>\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step2)), tempDate )}<br/>\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step3)), tempDate )}<br/>\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step4)), tempDate )}<br/>\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step5)), tempDate )}<br/>\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step6)), tempDate )}<br/>\n                                <br/>\n                            </td>\n                        </tr>\n                    )\n                })} \n            </table>\n            </div>\n        </>\n    )\n}\n\nexport default ListView;","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport ListView from './ListView';\nimport ProtocolInstructions from \"./ProtocolInstructions.json\"\nimport swal from 'sweetalert';\nimport pginfo from  \"./pginfo.json\"\nimport gnrhinfo from  \"./gnrhinfo.json\"\nconst ics = require('ics')\nvar FileSaver = require('file-saver');\n\nconst ParentView = props => {\n    const {\n        UserFlow, setUserFlow, DateToStartBreeding,\n        SynchronizationProtocol, \n        GNRH, PG, BullTurnIn, GestationPeriod \n    } = props;\n\n    //Text replace within prtocol instructions\n    const leadingZeroesMinutes = (DateObject) =>{\n        return (DateObject.getMinutes() < 10 ? '0' : '') + (DateObject.getMinutes());\n    }\n    \n    //String replace for PG's\n    const addPGtoSteps = (text) =>{\n        if(text === undefined){return ''}\n        return(text.replace(\"${PG}\", pginfo[PG]))\n    }\n    \n    //String replace for GNRH's\n    const addGNRHtoSteps = (text) =>{    \n        if(text === undefined){return ''}    \n        return(text.replace(\"${GNRH}\", gnrhinfo[GNRH]))\n    }\n\n    //String.Includes() looks for TimeEdit code in JSON protocol instructions and returns the appropriate time\n    const addTimedEventstoSteps = (text, dateObject) =>{    \n        if(text === undefined){return ''}   \n        if(text.includes(\"${Time-Edit}\")){\n            \n            let plusTimeEdit = text.indexOf(\":+:\");\n            let timeAdjustment = undefined;\n          \n           if (plusTimeEdit !== -1){\n                let analysis = text.substring(plusTimeEdit + 3)\n                timeAdjustment = dateObject.getHours() + parseInt(analysis);\n                return (`${timeAdjustment}:${leadingZeroesMinutes(dateObject)}`)\n            }\n           \n        }\n        return(text)\n    }\n\n    //List of instructions for this protocol \n    //example protocol 38 has 5 set of instructions for 5 different days \n    //these sets are broken down into steps 1 ... 6ish\n        //Add expected birth date to list of instructions\n    let ListOfInstrucitons = [...ProtocolInstructions[SynchronizationProtocol] ,  {\"OnDay\" : GestationPeriod.toString(), \"step1\" : \"Expected Birth Date\" }];    \n\n    //Add bull turn in day\n    let BullTurnInDict = {\"OnDay\" : BullTurnIn.toString() , \"step1\" : \"Bull Turn In Begins \" }\n\n        //Find where to place Bull Turn In Date in the list of events within protocol\n        let TempIndex = 0;\n        for(let i = 0; i < ListOfInstrucitons.length; i++){\n            if(BullTurnIn < parseInt(ListOfInstrucitons[i].OnDay)){\n                TempIndex = i ;\n                break;\n            }\n        }\n        ListOfInstrucitons.splice(TempIndex, 0, BullTurnInDict)\n\n    //Create then download the iCalendar file\n    const downloadICS = () =>{\n        let listOfEvents = []\n\n        \n        ListOfInstrucitons.map(instruction =>{\n\n            let tempDate = new Date(DateToStartBreeding)\n            tempDate.setDate(DateToStartBreeding.getDate() + parseInt(instruction.OnDay))\n\n            let description = \n                (instruction.step1 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step1)), tempDate )) + \n                (instruction.step2 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step2)), tempDate )) +\n                (instruction.step3 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step3)), tempDate )) +\n                (instruction.step4 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step4)), tempDate )) +\n                (instruction.step5 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step5)), tempDate )) +\n                (instruction.step6 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step6)), tempDate )) ;\n\n\n            let eventDictionary = {}\n            let ProtocolEventDate = new Date(DateToStartBreeding);\n            ProtocolEventDate.setDate(DateToStartBreeding.getDate() + parseInt(instruction.OnDay));\n\n            //ics.createEvents api arguements found https://www.npmjs.com/package/ics\n            eventDictionary[\"title\"] = \"Estrus Event\"\n            eventDictionary[\"description\"] = description;\n            eventDictionary[\"start\"] = [ProtocolEventDate.getFullYear(), ProtocolEventDate.getMonth() + 1 ,ProtocolEventDate.getDate() ,ProtocolEventDate.getHours() ,ProtocolEventDate.getMinutes()]\n            eventDictionary[\"duration\"] = {hours: 1}\n            listOfEvents.push(eventDictionary)\n\n            return undefined;\n        })\n\n        const { error, value } = ics.createEvents(listOfEvents)\n          \n        if (error) {\n            swal(error)\n            console.log(error)\n            //EXIT\n            return\n        }\n        //create file then download\n        var file = new File([value], \"EstrusScheduleDownload.ics\", {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(file);\n    }\n\n    return (\n        <>\n        <div className=\"noprint\">\n            <Button \n                style={{margin: \"20px\"}}\n                variant   = \"contained\" \n                size      = \"large\"\n                onClick={() => {\n                    setUserFlow(UserFlow -1)\n                }}\n            >Back\n            </Button>\n\n            <Button \n                style={{margin: \"20px\"}}\n                variant   = \"contained\" \n                size      = \"large\"\n                onClick={() => {\n                    downloadICS();\n                }}\n            >Download these Events as an iCalendar file (.ics)\n            </Button>\n            <Button \n                style={{margin: \"20px\"}}\n                variant   = \"contained\" \n                size      = \"large\"\n                onClick={() => {\n                    window.print()\n                }    \n            }>\n                Print\n            </Button>\n        </div>\n\n            <ListView \n                ListOfInstrucitons = {ListOfInstrucitons}\n                DateToStartBreeding={DateToStartBreeding}\n                SynchronizationProtocol = {SynchronizationProtocol}\n                GNRH={GNRH} \n                PG={PG} \n                BullTurnIn={BullTurnIn} \n                GestationPeriod={GestationPeriod}\n            />\n        </>\n    )\n\n}\n\nexport default ParentView;","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport CowOrHeiferData from \"./CowOrHeifer.json\"\nimport BreedTypeData from \"./BreedType.json\"\nimport SystemTypeData from \"./SystemType.json\"\nimport SemenTypeData from \"./SemenType.json\"\nimport GNRHData from \"./GNRH.json\"\nimport PGData from \"./PG.json\"\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDateTimePicker,\n  } from '@material-ui/pickers';\n  import DateFnsUtils from '@date-io/date-fns';\nimport \"./InitialData.css\"\nimport swal from 'sweetalert';\n\nconst InitialData = props => {\n    const {\n        UserFlow, setUserFlow, BreedType,\n        setBreedType, SemenType, setSemenType,\n        CowOrHeifer, setCowOrHeifer,\n        SystemType , setSystemType, DateToStartBreeding,\n        setDateToStartBreeding, GNRH , setGNRH, PG,\n        setPG, BullTurnIn , setBullTurnIn,\n        GestationPeriod , setGestationPeriod\n    } = props;\n\n    const CheckDataAndSubmit = () =>\n    {\n        if(\n            BreedType   === undefined ||\n            CowOrHeifer === undefined ||\n            SemenType   === undefined ||\n            SystemType  === undefined ||\n            DateToStartBreeding  === undefined ||\n            GNRH        === undefined ||\n            PG          === undefined ||\n            BullTurnIn  === undefined ||\n            GestationPeriod  === undefined\n        ){\n            swal( \"Enter more info\",{\n                icon: \"error\",\n              });\n        }\n        else{\n            setUserFlow(UserFlow + 1)\n        }\n    }\n\n    const GetAnticipatedCalvingDate = () => {\n        let tempDate = new Date(DateToStartBreeding)\n        tempDate.setDate(DateToStartBreeding.getDate() + parseInt(GestationPeriod))\n        return ((tempDate.getMonth() + 1).toString() + \"/\" +  (tempDate.getDate()).toString() + \"/\"+ (tempDate.getFullYear() ).toString())\n    }\n    \n\n    return (\n        <div >\n            <h1>Welcome to the Estrus Synchronization Planner</h1>\n            <h2>Enter Details Below to Get Started</h2>\n\n            {/* Set Date and Time to start Breeding */}\n            <FormControl variant = \"outlined\"                    \n                className=\"InputStyle\"\n                style={{border:\"solid 1px\", borderColor: \"gray\", borderRadius: 5, padding: 6}}\n                >\n                <MuiPickersUtilsProvider utils = { DateFnsUtils } >\n                    <KeyboardDateTimePicker\n                        variant     = \"dialogue\"\n                        label       = \"Date and Time to Start Breeding\"\n                        value       = { DateToStartBreeding }\n                        onChange    = { ( value )=> setDateToStartBreeding( new Date(value) ) }\n                        format      = \"MM/dd/yyyy hh:mm aa\"\n                    />\n                </MuiPickersUtilsProvider>\n            </FormControl>\n            <br />\n            <br />\n\n            {/* Set Gestation Period */}\n            <FormControl variant = \"outlined\">\n                <InputLabel>Gestation Period</InputLabel>\n                <input \n                type=\"number\"\n                style={{textAlign:'center'}}\n                    className=\"InputStyle\"\n                    value    = { GestationPeriod || undefined  } \n                    onChange ={ ( event ) => {setGestationPeriod(event.target.value)}} \n                />\n                </FormControl>\n            <br />\n            <br />\n\n            <p>Anticipated Calving Date: </p>\n            <p><strong> {GetAnticipatedCalvingDate()}</strong></p>\n\n            {/* Select Cow or Heifer */}\n            <FormControl variant = \"outlined\" >\n                <InputLabel>Cow or Heifer</InputLabel>\n                <Select \n                    className=\"InputStyle\"\n                    value    = { CowOrHeifer || undefined  } \n                    onChange ={ ( event ) => {setCowOrHeifer(event.target.value)}} \n                >\n                    {Object.keys(CowOrHeiferData).map( (jsonKey, index) => {\n                        return <option key={index} value={CowOrHeiferData[jsonKey]} >{jsonKey}</option>      \n                    })}\n                    \n                </Select>\n            </FormControl>\n            <br />\n            <br />\n\n            {/* Select Cow or Heifer */}\n            <FormControl variant = \"outlined\" >\n                <InputLabel>Semen Type</InputLabel>\n                <Select \n                    className=\"InputStyle\"\n                    value    = { SemenType || undefined  } \n                    onChange ={ ( event ) => {setSemenType(event.target.value)}} \n                >\n                    {Object.keys(SemenTypeData).map( (jsonKey, index) => {\n                        return <option key={index} value={SemenTypeData[jsonKey]} >{jsonKey}</option>      \n                    })}\n                    \n                </Select>\n            </FormControl>\n            <br />\n            <br />\n\n            {/* Select Species */}\n            <FormControl variant = \"outlined\" >\n                <InputLabel>Breed Type</InputLabel>\n                <Select \n                    className=\"InputStyle\"\n                    value    = { BreedType || undefined  } \n                    onChange ={ ( event ) => {setBreedType(event.target.value)}} \n                >\n                    {Object.keys(BreedTypeData).map( (jsonKey, index) => {\n                        return <option key={index} value={BreedTypeData[jsonKey]} >{jsonKey}</option>      \n                    })}\n                    \n                </Select>\n            </FormControl>\n            <br />\n            <br />\n\n            {/* Select System Type */}\n            <FormControl variant = \"outlined\" >\n                <InputLabel>System Type</InputLabel>\n                <Select \n                    className=\"InputStyle\"\n                    value    = { SystemType || undefined  } \n                    onChange ={ ( event ) => {setSystemType(event.target.value)}} \n                >\n                    {Object.keys(SystemTypeData).map( (jsonKey, index) => {\n                        return <option key={index} value={SystemTypeData[jsonKey]} >{jsonKey}</option>      \n                    })}\n                    \n                </Select>\n            </FormControl>\n            <br />\n            <br />\n\n            {/* Select GNRH Type */}\n            <FormControl variant = \"outlined\" >\n                <InputLabel>GNRH</InputLabel>\n                <Select \n                    className=\"InputStyle\"\n                    value    = { GNRH || undefined  } \n                    onChange ={ ( event ) => {setGNRH(event.target.value)}} \n                >\n                    {Object.keys(GNRHData).map( (jsonKey, index) => {\n                        return <option key={index} value={GNRHData[jsonKey]} >{jsonKey}</option>      \n                    })}\n                </Select>\n            </FormControl>\n            <br />\n            <br />\n\n            {/* Select PG Type */}\n            <FormControl variant = \"outlined\" >\n                <InputLabel>PG</InputLabel>\n                <Select \n                    className=\"InputStyle\"\n                    value    = { PG || undefined  } \n                    onChange ={ ( event ) => {setPG(event.target.value )}} \n                >\n                    {Object.keys(PGData).map( (jsonKey, index) => {\n                        return <option key={index} value={PGData[jsonKey]} >{jsonKey}</option>      \n                    })}\n                </Select>\n            </FormControl>\n            <br />\n            <br />\n\n        \n            {/* Set Bull Turn In */}\n            <FormControl variant = \"outlined\">\n                <InputLabel>Bull Turn In</InputLabel>\n                <input \n                type=\"number\"\n                style={{textAlign:'center'}}\n                    className=\"InputStyle\"\n                    value    = { BullTurnIn || undefined  } \n                    onChange ={ ( event ) => {setBullTurnIn(event.target.value)}} \n                />\n                </FormControl>\n            <br />\n            <br />\n\n\n\n         \n            <Button \n                onClick = {() => {CheckDataAndSubmit()}}\n                variant   = \"contained\" \n                size      = \"large\"\n            >\n            Submit\n            </Button>\n\n            <br />\n            <br />\n            <br />\n            <br />\n        </div>\n    );\n} /* end InitialData */\nexport default InitialData;","import React, {useState} from 'react';\nimport ProtocolPage from '../ProtocolsPage/ProtocolPage';\nimport ParentView from '../ScheduleReview/ParentView';\nimport InitialData from '../InitialData/InitialData';\n\nconst HomePage = () => {\n    const [BreedType , setBreedType] = useState(undefined)\n    const [CowOrHeifer , setCowOrHeifer] = useState(undefined)\n    const [SemenType , setSemenType] = useState(undefined)\n    const [SystemType , setSystemType] = useState(undefined)\n    const [DateToStartBreeding , setDateToStartBreeding ] = useState(new Date())\n    const [GNRH , setGNRH] = useState(6)\n    const [PG , setPG] = useState(8)\n    const [BullTurnIn , setBullTurnIn] = useState(14)\n    const [GestationPeriod , setGestationPeriod] = useState(281)\n    const [UserFlow, setUserFlow] = useState(1);\n    const [SynchronizationProtocol, setSynchronizationProtocol] = useState(undefined);\n\n    //Simple User flow is broken down to three steps\n    // 1) Gather user data, much like the first page of the excel sheet\n    // 2) Let a user select a protocol from the filtered protocol list\n    // 3) Let the user review their protocol, print it, or download the ICS file for future use.\n    if(UserFlow === 1){\n        return (\n            <InitialData \n            \n                BreedType={BreedType}\n                CowOrHeifer ={CowOrHeifer}\n                SystemType={SystemType}\n                SemenType ={SemenType}\n                DateToStartBreeding={DateToStartBreeding}\n                GNRH={GNRH} \n                PG={PG} \n                BullTurnIn={BullTurnIn} \n                GestationPeriod={GestationPeriod}\n                setSemenType={setSemenType}\n                setBreedType={setBreedType}\n                setCowOrHeifer ={setCowOrHeifer}\n                setSystemType={setSystemType}\n                setDateToStartBreeding={setDateToStartBreeding} \n                setGNRH={setGNRH} \n                setPG={setPG} \n                setBullTurnIn={setBullTurnIn} \n                setGestationPeriod={setGestationPeriod} \n                UserFlow={UserFlow}\n                setUserFlow = {setUserFlow}\n            />\n        );\n    }\n\n    if(UserFlow === 2){\n        return(\n        <ProtocolPage\n            BreedType={BreedType}\n            SemenType = {SemenType}\n            SystemType={SystemType}\n            CowOrHeifer ={CowOrHeifer}\n            SynchronizationProtocol = {SynchronizationProtocol}\n            setSynchronizationProtocol = {setSynchronizationProtocol}\n            UserFlow={UserFlow}\n            setUserFlow = {setUserFlow}\n         />);\n    }\n\n    if(UserFlow === 3){\n        return(\n            <ParentView \n                UserFlow={UserFlow}\n                setUserFlow = {setUserFlow}\n                DateToStartBreeding={DateToStartBreeding}\n                SynchronizationProtocol = {SynchronizationProtocol}\n                GNRH={GNRH} \n                PG={PG} \n                BullTurnIn={BullTurnIn} \n                GestationPeriod={GestationPeriod}\n            />\n        )\n    }\n\n} /* end HomePage */\nexport default HomePage;","import React from \"react\";\r\nimport AbbreviationsData from \"./Abbreviation.json\"\r\n\r\n\r\nconst AbbreviationsTable = () => {\r\n    return(\r\n        <div className=\"centerDiv\">\r\n            <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td><h3>Abbreviation </h3></td>\r\n                    <td><h3>Definition</h3></td>\r\n                </tr>\r\n                {AbbreviationsData.map((item,index) => (\r\n                    <tr key={index} >\r\n                        <td> <strong>{item[0]}</strong> </td>\r\n                        <td> {item[1]} </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AbbreviationsTable","import React from \"react\";\r\nimport DIT from \"./Detection-Insemination-type.json\"\r\n\r\nconst DetectionIneminationTypes = () => {\r\n    return(\r\n        <div className=\"centerDiv\">\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <td><h3>Insemination Type </h3></td>\r\n                    <td><h3>Definition</h3></td>\r\n                </tr>\r\n                {DIT.map((item, index) => (\r\n                    <tr key={index} >\r\n                        <td> <strong>{item[0]}</strong> </td>\r\n                        <td> {item[1]} </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetectionIneminationTypes","import React from \"react\";\r\n\r\nconst BreedingTime = () => {\r\n\r\n    const DayToStartBreeding = `This is the day that you wish to start heat detection and AI.  In the case of Fixed-Time AI, this is the day that you wish to inseminate the whole group.`\r\n    const TimeToStartBreeding = `Used with Clean-up AI and Fixed Time AI systems.  The average number of hours between PG administration and insemination should be close to the suggested interval.  Strive for the recommended interval +/- 2 hours.`  \r\n\r\n    return(\r\n        <div className=\"centerDiv\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><strong>Day to Start Breeding</strong></td>\r\n                        <td>{DayToStartBreeding}</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td><strong>Time to Start Breeding</strong></td>\r\n                        <td>{TimeToStartBreeding}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BreedingTime","/**\n *  Help.js\n *  Copyright (C) 2021  Andrew Stene, Ben Amos\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *   \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport React , { useState }from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core'\nimport AbbreviationsTable from './AbbreviationTable';\nimport DetectionIneminationTypes from './DetectionInseminationTypes';\nimport BreedingTime from './BreedingTime';\n\n/**\n * React component that implements the help page\n */\nconst Help = () => {\n    \n    const [ AbbreviationCollapse, setAbbreviationCollapse] = useState(true)\n\n    const AbvToggle = () => {\n        setAbbreviationCollapse(!AbbreviationCollapse)\n    }\n\n    return(\n        <>\n            <h1>Helpful Tips </h1>\n\n            <h3>Tips for Abbreviations</h3>\n            <Button\n               color     = \"defualt\" \n               variant   = \"contained\" \n               size      = \"Large\" \n                onClick={() => {AbvToggle()}}> {AbbreviationCollapse ? \"Close\" : \"View\"} List of Abbreviations</Button>\n            <br />\n            <br />\n            {AbbreviationCollapse ? <AbbreviationsTable /> : null}\n\n            <h3>Tips for Time</h3>\n            <BreedingTime />\n\n            <h3>Tips for Insemination Types</h3>\n            <DetectionIneminationTypes />\n            <Button \n                className = \"sidebysidebutton\" \n                component = { Link } \n                to        = \"/\"\n                color     = \"defualt\" \n                variant   = \"contained\" \n                size      = \"small\" \n            >\n                Home\n            </Button>\n        </>\n    );\n} \nexport default Help;","/**\n *  Reference.js\n *  Copyright (C) 2021  Andrew Stene, Ben Amos\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *   \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport img1 from './1.svg';\nimport img2 from './2.svg';\nimport img3 from './3.svg';\nimport \"./Reference.css\"\n\n/**\n * @function Reference - React component that represents a refernce type page\n */\nconst  Reference = () =>\n{\n    const [BPSize, setBPSize] = useState(false)\n    const [SSPSize, setSSPSize] = useState(false)\n    const [HPSize, setHPSize] = useState(false)\n    \n    const EnlargeBP = () => {\n        setBPSize(!BPSize)\n    }\n\n    const EnlargeHP = () => {\n        setHPSize(!HPSize)\n    }\n\n    const EnlargeSSP = () => {\n        setSSPSize(!SSPSize)\n    }\n    \n    return(\n        <div>\n            <h1>Reference Information</h1>\n            <h2>Click on the Image to Enlarge</h2>\n            {BPSize ? \n                <img onClick={EnlargeBP} className=\"large\" src = { img1 } alt = \"bp\" />    \n                : \n                <img onClick={EnlargeBP} className=\"normal\" src = { img1} alt = \"bp\" />    \n            }\n            <br />\n\n            {HPSize ? \n                <img onClick={EnlargeHP} className=\"large\" src = { img2 } alt = \"hp\" />    \n                : \n                <img onClick={EnlargeHP} className=\"normal\" src = { img2 } alt = \"hp\" />    \n            }\n            <br />\n\n            {SSPSize ? \n                <img onClick={EnlargeSSP} className=\"large\" src = { img3 } alt = \"ssp\" />    \n                : \n                <img onClick={EnlargeSSP} className=\"normal\" src = { img3 } alt = \"sp\" />    \n            }\n            <br/>\n\n            <Button \n                className = \"sidebysidebutton\" \n                component = { Link } \n                to        = \"/\" \n                color     = \"defualt\" \n                variant   = \"contained\" \n                size      = \"small\" \n            >\n                Home\n            </Button>            \n        </div>\n    );\n}\nexport default Reference;","/**\n *  App.js\n *  Copyright (C) 2021  Andrew Stene, Ben Amos\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *   \n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n * \n * edit: Erick Saenz has modified this application. send me questions at erksterx@gmail.com if you need help\n */\n import React from 'react';\n import './App.css';\n import Header from './components/Header/Header';\n import HomePage from './components/HomePage/HomePage';\n // import Footer from './components/Footer/Footer';\n import Help from './components/Help/Help';\n import Reference from './components/Reference/Reference'\n import { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nconst App = () => {\n  //Run url router\n  return(\n    <Router basename='/EstrusFrontEnd/'>\n      <div className = \"App\" >\n        <Header/>\n        <Route path = \"/help\"      component = { Help } />\n        <Route path = \"/reference\" component = { Reference } />\n        <Route path = \"/\" exact > <HomePage /> </Route>\n        {/* <Footer/> */}\n    </div>\n  </Router>\n);\n\n} /* end App */\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/**\r\n * index.js\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n/**\r\n * Auto-generated ReactDOM render function \r\n */\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}