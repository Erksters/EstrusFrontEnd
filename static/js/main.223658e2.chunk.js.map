{"version":3,"sources":["components/Reference/ssp.png","components/brtf_full-color.png","components/Header.js","components/ProtocolsPage/ProtocolPage.js","components/ScheduleReview/ListView.js","components/ScheduleReview/ParentView.js","components/InitialData/InitialData.js","components/HomePage/HomePage.js","Footer.js","components/Help/AbbreviationTable.js","components/Help/DetectionInseminationTypes.js","components/Help/BreedingTime.js","components/Help/Help.js","components/Reference/Reference.js","App.js","serviceWorker.js","index.js","components/Reference/bp.png","components/Reference/hp.png"],"names":["module","exports","Header","style","backgroundColor","to","src","cow","alt","ProtocolPage","props","UserFlow","setUserFlow","BreedType","CowOrHeifer","SemenType","SystemType","SynchronizationProtocol","setSynchronizationProtocol","filteredList","push","FormControl","variant","InputLabel","Select","className","value","undefined","onChange","event","target","map","jsonKey","index","key","SynchProtocolTitleData","SynchronizationSystemTitle","Button","onClick","size","swal","icon","ListView","ListOfInstrucitons","DateToStartBreeding","GNRH","PG","leadingZeroesMinutes","DateObject","getMinutes","addPGtoSteps","text","replace","pginfo","addGNRHtoSteps","gnrhinfo","addTimedEventstoSteps","dateObject","includes","plusTimeEdit","indexOf","exactTimeEdit","timeAdjustment","analysis","substring","getHours","parseInt","instruction","tempDate","Date","setDate","getDate","OnDay","getMonth","getFullYear","step1","step2","step3","step4","step5","step6","window","print","ics","require","FileSaver","ParentView","BullTurnIn","GestationPeriod","useState","ProtocolInstructions","toString","BullTurnInDict","TempIndex","i","length","splice","listOfEvents","description","eventDictionary","ProtocolEventDate","hours","createEvents","error","console","log","file","File","type","saveAs","downloadICS","InitialData","setBreedType","setSemenType","setCowOrHeifer","setSystemType","setDateToStartBreeding","setGNRH","setPG","setBullTurnIn","setGestationPeriod","Object","keys","CowOrHeiferData","SemenTypeData","BreedTypeData","SystemTypeData","GNRHData","PGData","textAlign","utils","DateFnsUtils","label","format","HomePage","Footer","href","AbbreviationsTable","AbbreviationsData","item","DetectionIneminationTypes","DIT","BreedingTime","Help","AbbreviationCollapse","setAbbreviationCollapse","color","component","Link","Reference","BPSize","setBPSize","SSPSize","setSSPSize","HPSize","setHPSize","EnlargeBP","EnlargeHP","EnlargeSSP","bp","hp","ssp","App","basename","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,s65ECsB5BC,MAXf,WAEI,OACI,yBAAKC,MAAO,CAACC,gBAAiB,YAC1B,kBAAC,IAAD,CAAMC,GAAK,KACX,yBAAKC,IAAMC,IAAKC,IAAI,W,sECskBjBC,EA9kBM,SAAAC,GACjB,IACIC,EAGAD,EAHAC,SAAUC,EAGVF,EAHUE,YACVC,EAEAH,EAFAG,UAAWC,EAEXJ,EAFWI,YAAaC,EAExBL,EAFwBK,UACxBC,EACAN,EADAM,WAAYC,EACZP,EADYO,wBAAyBC,EACrCR,EADqCQ,2BAGrCC,EAAe,GAgfI,IAAhBL,IA5ec,IAAdD,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,GAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,GAErCG,EAAaC,KAAK,IAWzB,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,GAElBG,EAAaC,KAAK,IAQb,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,GAElBG,EAAaC,KAAK,IAQT,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,GAGD,IAAdP,GAAmC,IAAfG,EAEnBG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,GAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,IAEkB,IAAdE,GAAkC,IAAfC,EAElBG,EAAaC,KAAK,GAGD,IAAdL,GAAkC,IAAfC,EAElBG,EAAaC,KAAK,IAGD,IAAdL,GAAkC,IAAfC,EAElBG,EAAaC,KAAK,IAGD,IAAdL,GAAkC,IAAfC,GAElBG,EAAaC,KAAK,KAgB7C,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,GAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAEzCG,EAAaC,KAAK,IAGG,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,GAIpB,IAAdH,GAAiC,IAAdE,GAAkC,IAAfC,GAIpB,IAAdH,IAEkB,IAAdE,GAAkC,IAAfC,EAElBG,EAAaC,KAAK,IAGD,IAAdL,GAAkC,IAAfC,EAElBG,EAAaC,KAAK,IAGD,IAAdL,GAAkC,IAAfC,GAElBG,EAAaC,KAAK,KAcrC,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,GAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,IAEkB,IAAdE,GAAkC,IAAfC,EAElBG,EAAaC,KAAK,IAGD,IAAdL,GAAkC,IAAfC,GAEtBG,EAAaC,KAAK,KAWrB,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,GAErCG,EAAaC,KAAK,KAoRP,IAAhBN,IA7Qc,IAAdD,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,GAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAID,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAID,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,EAErCG,EAAaC,KAAK,IAGD,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,GAErCG,EAAaC,KAAK,IAWzB,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,GAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,GAElBG,EAAaC,KAAK,IASjB,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,GAElBG,EAAaC,KAAK,IASjB,IAAdP,GAAkC,IAAfG,EAElBG,EAAaC,KAAK,IAGD,IAAdP,GAAkC,IAAfG,GAElBG,EAAaC,KAAK,IAOT,IAAdP,GAAiC,IAAdE,GAAkC,IAAfC,GAErCG,EAAaC,KAAK,IAML,IAAdP,GAAiC,IAAdE,EAEA,IAAfC,EAECG,EAAaC,KAAK,GAGA,IAAfJ,GAECG,EAAaC,KAAK,IAKT,IAAdP,IAEmB,IAAfG,EAECG,EAAaC,KAAK,GAGA,IAAfJ,EAECG,EAAaC,KAAK,IAGA,IAAfJ,GAECG,EAAaC,KAAK,KAUrB,IAAdP,GAAiC,IAAdE,EAEA,IAAfC,EAECG,EAAaC,KAAK,IAGA,IAAfJ,GAECG,EAAaC,KAAK,IAKT,IAAdP,IAEmB,IAAfG,EAECG,EAAaC,KAAK,GAGA,IAAfJ,EAECG,EAAaC,KAAK,IAGA,IAAfJ,GAECG,EAAaC,KAAK,KAUrB,IAAdP,GAAiC,IAAdE,EAEA,IAAfC,EAECG,EAAaC,KAAK,IAGA,IAAfJ,GAECG,EAAaC,KAAK,IAKT,IAAdP,IAEmB,IAAfG,EAECG,EAAaC,KAAK,IAGA,IAAfJ,EAECG,EAAaC,KAAK,IAGA,IAAfJ,GAECG,EAAaC,KAAK,KAUrB,IAAdP,GAAiC,IAAdE,EAEC,IAAfC,GAEAG,EAAaC,KAAK,IAIL,IAAdP,IAEmB,IAAfG,EAECG,EAAaC,KAAK,IAGA,IAAfJ,GAECG,EAAaC,KAAK,MAuDtC,OAEI,6BACI,6BACA,6BAEA,kBAACC,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,wBACA,kBAACC,EAAA,EAAD,CACIC,UAAU,aACVC,MAAaT,QAA2BU,EACxCC,SAAY,SAAEC,GAAYX,EAA2BW,EAAMC,OAAOJ,SAEhEP,EAAaY,KAAK,SAACC,EAASC,GAC1B,OAAO,4BAAQC,IAAKD,EAAOP,MAAOM,GAAWG,EAAuBH,GAASI,iCAKzF,6BACA,6BAEA,kBAACC,EAAA,EAAD,CACIC,QAAW,WAAO1B,EAAYD,EAAU,IACxCW,QAAY,YACZiB,KAAY,SAHhB,UAQA,kBAACF,EAAA,EAAD,CACIC,QAAW,gBAzCaX,IAA5BV,EACAuB,IAAM,gCAAgC,CAClCC,KAAM,UAIV7B,EAAYD,EAAW,IAoCnBW,QAAY,YACZiB,KAAY,SAHhB,Y,iCCxeGG,EA7FE,SAAAhC,GACb,IAAQiC,EAA8EjC,EAA9EiC,mBAAoBC,EAA0DlC,EAA1DkC,oBAAqB3B,EAAqCP,EAArCO,wBAAyB4B,EAAYnC,EAAZmC,KAAMC,EAAMpC,EAANoC,GAM1EC,EAAuB,SAACC,GAC1B,OAAQA,EAAWC,aAAe,GAAK,IAAM,IAAOD,EAAWC,cAG7DC,EAAe,SAACC,GAClB,YAAYxB,IAATwB,EAA2B,GACvBA,EAAKC,QAAQ,QAASC,EAAOP,KAGlCQ,EAAiB,SAACH,GACpB,YAAYxB,IAATwB,EAA2B,GACvBA,EAAKC,QAAQ,UAAWG,EAASV,KAGtCW,EAAwB,SAACL,EAAMM,GACjC,QAAY9B,IAATwB,EAAoB,MAAO,GAC9B,GAAGA,EAAKO,SAAS,gBAAgB,CAE7B,IAAIC,EAAeR,EAAKS,QAAQ,OAC5BC,EAAgBV,EAAKS,QAAQ,OAC7BE,OAAiBnC,EAErB,IAAsB,GAAlBkC,EAAoB,CACpB,IAAIE,EAAWZ,EAAKa,UAAUH,EAAgB,GAE9C,OADAC,EAAiBL,EAAWQ,WAAaC,SAASH,GAC5C,GAAN,OAAUD,EAAV,YAA4Bf,EAAqBU,IAEhD,IAAqB,GAAjBE,EAAmB,CACxB,IAAII,EAAWZ,EAAKa,UAAUL,EAAe,GAE7C,OADAG,EAAiBL,EAAWQ,WAAaC,SAASH,GAC5C,GAAN,OAAWD,EAAX,YAA6Bf,EAAqBU,KAI1D,OAAON,GAGX,OACI,oCACI,yCAAelC,GAEf,yBAAKQ,UAAU,eACf,+BACI,4BACI,6CACA,6CAEHkB,EAAmBZ,KAAI,SAAAoC,GACpB,IApDYnB,EAoDRoB,EAAW,IAAIC,KAAKzB,GAGxB,OAFAwB,EAASE,QAAQ1B,EAAoB2B,UAAYL,SAASC,EAAYK,QAGlE,4BACI,4BAAMJ,EAASK,WAAa,EAA5B,MAAmCL,EAASG,UAA5C,MAA4DH,EAASM,cACrE,+BA1DI1B,EA2DiBoB,GA1DtBH,WAAa,GAAK,IAAM,IAAMjB,EAAWiB,WAwDxC,IAEiClB,EAAqBqB,IACtD,4BACA,6BACKZ,EAAsBF,EAAeJ,EAAaiB,EAAYQ,QAASP,GAAW,6BAClFZ,EAAsBF,EAAeJ,EAAaiB,EAAYS,QAASR,GAAW,6BAClFZ,EAAsBF,EAAeJ,EAAaiB,EAAYU,QAAST,GAAW,6BAClFZ,EAAsBF,EAAeJ,EAAaiB,EAAYW,QAASV,GAAW,6BAClFZ,EAAsBF,EAAeJ,EAAaiB,EAAYY,QAASX,GAAW,6BAClFZ,EAAsBF,EAAeJ,EAAaiB,EAAYa,QAASZ,GAAW,6BACnF,oCAQpB,6BACA,kBAAC/B,EAAA,EAAD,CACIf,QAAY,YACZiB,KAAY,QACZD,QAAS,WACL2C,OAAOC,UAJf,W,SC/ENC,EAAMC,EAAQ,KAChBC,EAAYD,EAAQ,KAwJTE,EArJI,SAAA5E,GA6DX,IA5DJ,IACIC,EAGAD,EAHAC,SAAUC,EAGVF,EAHUE,YAAagC,EAGvBlC,EAHuBkC,oBACvB3B,EAEAP,EAFAO,wBACA4B,EACAnC,EADAmC,KAAMC,EACNpC,EADMoC,GAAIyC,EACV7E,EADU6E,WAAYC,EACtB9E,EADsB8E,gBAI1B,EAAqDC,mBAAS,GAA9D,mBAGM1C,GAHN,UAG6B,SAACC,GAC1B,OAAQA,EAAWC,aAAe,GAAK,IAAM,IAAOD,EAAWC,eAI7DC,EAAe,SAACC,GAClB,YAAYxB,IAATwB,EAA2B,GACvBA,EAAKC,QAAQ,QAASC,EAAOP,KAIlCQ,EAAiB,SAACH,GACpB,YAAYxB,IAATwB,EAA2B,GACvBA,EAAKC,QAAQ,UAAWG,EAASV,KAGtCW,EAAwB,SAACL,EAAMM,GACjC,QAAY9B,IAATwB,EAAoB,MAAO,GAC9B,GAAGA,EAAKO,SAAS,gBAAgB,CAE7B,IAAIC,EAAeR,EAAKS,QAAQ,OAC5BC,EAAgBV,EAAKS,QAAQ,OAC7BE,OAAiBnC,EAErB,IAAsB,GAAlBkC,EAAoB,CACpB,IAAIE,EAAWZ,EAAKa,UAAUH,EAAgB,GAE9C,OADAC,EAAiBL,EAAWQ,WAAaC,SAASH,GAC5C,GAAN,OAAUD,EAAV,YAA4Bf,EAAqBU,IAEhD,IAAqB,GAAjBE,EAAmB,CACxB,IAAII,EAAWZ,EAAKa,UAAUL,EAAe,GAE7C,OADAG,EAAiBL,EAAWQ,WAAaC,SAASH,GAC5C,GAAN,OAAWD,EAAX,YAA6Bf,EAAqBU,KAI1D,OAAON,GAOPR,EAAkB,sBAAO+C,EAAqBzE,IAA5B,CAAwD,CAAC,MAAUuE,EAAgBG,WAAY,MAAU,yBAG3HC,EAAiB,CAAC,MAAUL,EAAWI,WAAa,MAAU,wBAG1DE,EAAY,EACRC,EAAI,EAAGA,EAAInD,EAAmBoD,OAAQD,IAC1C,GAAGP,EAAarB,SAASvB,EAAmBmD,GAAGtB,OAAO,CAClDqB,EAAYC,EACZ,MAGRnD,EAAmBqD,OAAOH,EAAW,EAAGD,GA8C5C,OACI,oCACA,6BACI,kBAACvD,EAAA,EAAD,CACIf,QAAY,YACZiB,KAAY,QACZD,QAAS,WACL1B,EAAYD,EAAU,KAJ9B,QASA,kBAAC0B,EAAA,EAAD,CACIf,QAAY,YACZiB,KAAY,QACZD,QAAS,YA1DD,WAChB,IAAI2D,EAAe,GAGnBtD,EAAmBZ,KAAI,SAAAoC,GAEnB,IAAIC,EAAW,IAAIC,KAAKzB,GACxBwB,EAASE,QAAQ1B,EAAoB2B,UAAYL,SAASC,EAAYK,QAEtE,IAAI0B,QACuBvE,IAAtBwC,EAAYQ,MAAsB,GAAKnB,EAAsBF,EAAeJ,EAAaiB,EAAYQ,QAASP,UACxFzC,IAAtBwC,EAAYS,MAAsB,GAAKpB,EAAsBF,EAAeJ,EAAaiB,EAAYS,QAASR,UACxFzC,IAAtBwC,EAAYU,MAAsB,GAAKrB,EAAsBF,EAAeJ,EAAaiB,EAAYU,QAAST,UACxFzC,IAAtBwC,EAAYW,MAAsB,GAAKtB,EAAsBF,EAAeJ,EAAaiB,EAAYW,QAASV,UACxFzC,IAAtBwC,EAAYY,MAAsB,GAAKvB,EAAsBF,EAAeJ,EAAaiB,EAAYY,QAASX,UACxFzC,IAAtBwC,EAAYa,MAAsB,GAAKxB,EAAsBF,EAAeJ,EAAaiB,EAAYa,QAASZ,IAG/G+B,EAAkB,GAClBC,EAAoB,IAAI/B,KAAKzB,GACjCwD,EAAkB9B,QAAQ1B,EAAoB2B,UAAYL,SAASC,EAAYK,QAG/E2B,EAAe,MAAY,eAC3BA,EAAe,YAAkBD,EACjCC,EAAe,MAAY,CAACC,EAAkB1B,cAAe0B,EAAkB3B,WAAa,EAAG2B,EAAkB7B,UAAW6B,EAAkBnC,WAAYmC,EAAkBnD,cAC5KkD,EAAe,SAAe,CAACE,MAAO,GACtCJ,EAAa7E,KAAK+E,MAItB,MAAyBhB,EAAImB,aAAaL,GAAlCM,EAAR,EAAQA,MAAO7E,EAAf,EAAeA,MAEf,GAAI6E,EAGJ,OAFA/D,IAAK+D,QACLC,QAAQC,IAAIF,GAIZ,IAAIG,EAAO,IAAIC,KAAK,CAACjF,GAAQ,6BAA8B,CAACkF,KAAM,6BAClEvB,EAAUwB,OAAOH,GAmBLI,KAJR,sDAUA,kBAAC,EAAD,CACInE,mBAAsBA,EACtBC,oBAAqBA,EACrB3B,wBAA2BA,EAC3B4B,KAAMA,EACNC,GAAIA,EACJyC,WAAYA,EACZC,gBAAiBA,M,0ECuDlBuB,G,OA7LK,SAAArG,GAChB,IACIC,EAOAD,EAPAC,SAAUC,EAOVF,EAPUE,YAAaC,EAOvBH,EAPuBG,UACvBmG,EAMAtG,EANAsG,aAAcjG,EAMdL,EANcK,UAAWkG,EAMzBvG,EANyBuG,aACzBnG,EAKAJ,EALAI,YAAaoG,EAKbxG,EALawG,eACblG,EAIAN,EAJAM,WAAamG,EAIbzG,EAJayG,cAAevE,EAI5BlC,EAJ4BkC,oBAC5BwE,EAGA1G,EAHA0G,uBAAwBvE,EAGxBnC,EAHwBmC,KAAOwE,EAG/B3G,EAH+B2G,QAASvE,EAGxCpC,EAHwCoC,GACxCwE,EAEA5G,EAFA4G,MAAO/B,EAEP7E,EAFO6E,WAAagC,EAEpB7G,EAFoB6G,cACpB/B,EACA9E,EADA8E,gBAAkBgC,EAClB9G,EADkB8G,mBAyBtB,OACI,6BACI,6EACA,kEAGA,kBAACnG,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,sBACA,kBAACC,EAAA,EAAD,CACIC,UAAU,aACVC,MAAaZ,QAAea,EAC5BC,SAAY,SAAEC,GAAYqF,EAAerF,EAAMC,OAAOJ,SAErD+F,OAAOC,KAAKC,GAAiB5F,KAAK,SAACC,EAASC,GACzC,OAAO,4BAAQC,IAAKD,EAAOP,MAAOiG,EAAgB3F,IAAYA,QAK1E,6BACA,6BAGA,kBAACX,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,mBACA,kBAACC,EAAA,EAAD,CACIC,UAAU,aACVC,MAAaX,QAAaY,EAC1BC,SAAY,SAAEC,GAAYoF,EAAapF,EAAMC,OAAOJ,SAEnD+F,OAAOC,KAAKE,GAAe7F,KAAK,SAACC,EAASC,GACvC,OAAO,4BAAQC,IAAKD,EAAOP,MAAOkG,EAAc5F,IAAYA,QAKxE,6BACA,6BAGA,kBAACX,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,mBACA,kBAACC,EAAA,EAAD,CACIC,UAAU,aACVC,MAAab,QAAac,EAC1BC,SAAY,SAAEC,GAAYmF,EAAanF,EAAMC,OAAOJ,SAEnD+F,OAAOC,KAAKG,GAAe9F,KAAK,SAACC,EAASC,GACvC,OAAO,4BAAQC,IAAKD,EAAOP,MAAOmG,EAAc7F,IAAYA,QAKxE,6BACA,6BAGA,kBAACX,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,oBACA,kBAACC,EAAA,EAAD,CACIC,UAAU,aACVC,MAAaV,QAAcW,EAC3BC,SAAY,SAAEC,GAAYsF,EAActF,EAAMC,OAAOJ,SAEpD+F,OAAOC,KAAKI,GAAgB/F,KAAK,SAACC,EAASC,GACxC,OAAO,4BAAQC,IAAKD,EAAOP,MAAOoG,EAAe9F,IAAYA,QAKzE,6BACA,6BAGA,kBAACX,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,aACA,kBAACC,EAAA,EAAD,CACIC,UAAU,aACVC,MAAamB,QAAQlB,EACrBC,SAAY,SAAEC,GAAYwF,EAAQxF,EAAMC,OAAOJ,SAE9C+F,OAAOC,KAAKK,GAAUhG,KAAK,SAACC,EAASC,GAClC,OAAO,4BAAQC,IAAKD,EAAOP,MAAOqG,EAAS/F,IAAYA,QAInE,6BACA,6BAGA,kBAACX,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,WACA,kBAACC,EAAA,EAAD,CACIC,UAAU,aACVC,MAAaoB,QAAMnB,EACnBC,SAAY,SAAEC,GAAYyF,EAAMzF,EAAMC,OAAOJ,SAE5C+F,OAAOC,KAAKM,GAAQjG,KAAK,SAACC,EAASC,GAChC,OAAO,4BAAQC,IAAKD,EAAOP,MAAOsG,EAAOhG,IAAYA,QAIjE,6BACA,6BAGA,kBAACX,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,yBACA,2BACAqF,KAAK,SACLzG,MAAO,CAAC8H,UAAU,UACdxG,UAAU,aACVC,MAAa8D,QAAmB7D,EAChCC,SAAY,SAAEC,GAAY2F,EAAmB3F,EAAMC,OAAOJ,WAGlE,6BACA,6BAGA,kBAACL,EAAA,EAAD,CAAaC,QAAU,YACnB,kBAACC,EAAA,EAAD,qBACA,2BACAqF,KAAK,SACLzG,MAAO,CAAC8H,UAAU,UACdxG,UAAU,aACVC,MAAa6D,QAAc5D,EAC3BC,SAAY,SAAEC,GAAY0F,EAAc1F,EAAMC,OAAOJ,WAG7D,6BACA,6BAGA,kBAAC,IAAD,CAAyBwG,MAAUC,KAC/B,kBAAC,IAAD,CACI7G,QAAc,WACd8G,MAAc,6BACd1G,MAAgBkB,EAChBhB,SAAgB,SAAEF,GAAF,OAAY0F,EAAwB,IAAI/C,KAAK3C,KAC7D2G,OAAc,yBAGtB,6BACA,6BAEA,kBAAChG,EAAA,EAAD,CACIC,QAAW,gBAtKCX,IAAhBd,QACgBc,IAAhBb,QACgBa,IAAhBZ,QACgBY,IAAhBX,QACyBW,IAAzBiB,QACgBjB,IAAhBkB,QACgBlB,IAAhBmB,QACgBnB,IAAhB4D,QACqB5D,IAArB6D,EAEAhD,IAAM,kBAAkB,CACpBC,KAAM,UAIV7B,EAAYD,EAAW,IAwJnBW,QAAY,YACZiB,KAAY,SAHhB,aC1HG+F,EAvEE,WACb,MAAmC7C,wBAAS9D,GAA5C,mBAAOd,EAAP,KAAmBmG,EAAnB,KACA,EAAuCvB,wBAAS9D,GAAhD,mBAAOb,EAAP,KAAqBoG,EAArB,KACA,EAAmCzB,wBAAS9D,GAA5C,mBAAOZ,EAAP,KAAmBkG,EAAnB,KACA,EAAqCxB,wBAAS9D,GAA9C,mBAAOX,EAAP,KAAoBmG,EAApB,KACA,EAAwD1B,mBAAS,IAAIpB,MAArE,mBAAOzB,EAAP,KAA6BwE,EAA7B,KACA,EAAyB3B,wBAAS9D,GAAlC,mBAAOkB,EAAP,KAAcwE,EAAd,KACA,EAAqB5B,wBAAS9D,GAA9B,mBAAOmB,EAAP,KAAYwE,EAAZ,KACA,EAAqC7B,mBAAS,IAA9C,mBAAOF,EAAP,KAAoBgC,EAApB,KACA,EAA+C9B,mBAAS,KAAxD,mBAAOD,EAAP,KAAyBgC,EAAzB,KACA,EAAgC/B,mBAAS,GAAzC,mBAAO9E,EAAP,KAAiBC,EAAjB,KACA,EAA8D6E,wBAAS9D,GAAvE,mBAAOV,EAAP,KAAgCC,EAAhC,KAEA,OAAgB,IAAbP,EAEK,kBAAC,EAAD,CACIE,UAAWA,EACXC,YAAcA,EACdE,WAAYA,EACZD,UAAYA,EACZ6B,oBAAqBA,EACrBC,KAAMA,EACNC,GAAIA,EACJyC,WAAYA,EACZC,gBAAiBA,EACjByB,aAAcA,EACdD,aAAcA,EACdE,eAAiBA,EACjBC,cAAeA,EACfC,uBAAwBA,EACxBC,QAASA,EACTC,MAAOA,EACPC,cAAeA,EACfC,mBAAoBA,EACpB7G,SAAUA,EACVC,YAAeA,IAKX,IAAbD,EAEC,kBAAC,EAAD,CACIE,UAAWA,EACXE,UAAaA,EACbC,WAAYA,EACZF,YAAcA,EACd8B,oBAAqBA,EACrB3B,wBAA2BA,EAC3BC,2BAA8BA,EAC9BP,SAAUA,EACVC,YAAeA,IAIP,IAAbD,EAEK,kBAAC,EAAD,CACIA,SAAUA,EACVC,YAAeA,EACfgC,oBAAqBA,EACrB3B,wBAA2BA,EAC3B4B,KAAMA,EACNC,GAAIA,EACJyC,WAAYA,EACZC,gBAAiBA,SAV7B,G,OCvBW+C,MAZf,WAEI,OACI,yBAAK9G,UAAW,UACZ,4BACA,4BAAI,kBAAC,IAAD,CAAMpB,GAAK,SAAX,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAK,cAAX,cACJ,4BAAI,uBAAGmI,KAAO,yBAAV,6C,QCNDC,EAtBY,WACvB,OACI,yBAAKhH,UAAU,aACX,+BACA,+BACI,4BACI,4BAAI,8CACJ,4BAAI,4CAEPiH,EAAkB3G,KAAI,SAAC4G,EAAK1G,GAAN,OACnB,wBAAIC,IAAKD,GACL,gCAAK,gCAAS0G,EAAK,IAAnB,KACA,gCAAMA,EAAK,GAAX,a,SCQTC,EArBmB,WAC9B,OACI,yBAAKnH,UAAU,aACX,+BACI,+BACA,4BACI,4BAAI,mDACJ,4BAAI,4CAEPoH,EAAI9G,KAAI,SAAC4G,EAAM1G,GAAP,OACL,wBAAIC,IAAKD,GACL,gCAAK,gCAAS0G,EAAK,IAAnB,KACA,gCAAMA,EAAK,GAAX,aCeTG,EA1BM,WAMjB,OACI,yBAAKrH,UAAU,aACX,+BACI,+BACI,4BACI,4BAAI,0DACJ,4BAVI,8JAaR,4BACI,4BAAI,2DACJ,4BAdK,8NC4DdsH,EAxCF,WAET,MAAyDtD,oBAAS,GAAlE,mBAAQuD,EAAR,KAA8BC,EAA9B,KAMA,OACI,oCACI,6CAEA,sDACA,kBAAC5G,EAAA,EAAD,CACG6G,MAAY,UACZ5H,QAAY,YACZiB,KAAY,QACXD,QAAS,WAZjB2G,GAAyBD,KAQrB,IAIoCA,EAAuB,QAAU,OAJrE,0BAKA,6BACA,6BACCA,EAAuB,kBAAC,EAAD,MAAyB,KAEjD,6CACA,kBAAC,EAAD,MAEA,0DACA,kBAAC,EAAD,MACA,kBAAC3G,EAAA,EAAD,CACIZ,UAAY,mBACZ0H,UAAcC,IACd/I,GAAY,IACZ6I,MAAY,UACZ5H,QAAY,YACZiB,KAAY,SANhB,U,oDC8BG8G,G,OAxDI,WAEf,MAA4B5D,oBAAS,GAArC,mBAAO6D,EAAP,KAAeC,EAAf,KACA,EAA8B9D,oBAAS,GAAvC,mBAAO+D,EAAP,KAAgBC,EAAhB,KACA,EAA4BhE,oBAAS,GAArC,mBAAOiE,EAAP,KAAeC,EAAf,KAEMC,EAAY,WACdL,GAAWD,IAGTO,EAAY,WACdF,GAAWD,IAGTI,EAAa,WACfL,GAAYD,IAGhB,OACI,6BACI,qDACA,6DACCF,EACG,yBAAKhH,QAASsH,EAAWnI,UAAU,QAAQnB,IAAQyJ,IAAKvJ,IAAM,OAE9D,yBAAK8B,QAASsH,EAAWnI,UAAU,SAASnB,IAAQyJ,IAAKvJ,IAAM,OAEnE,6BAECkJ,EACG,yBAAKpH,QAASuH,EAAWpI,UAAU,QAAQnB,IAAQ0J,IAAKxJ,IAAM,OAE9D,yBAAK8B,QAASuH,EAAWpI,UAAU,SAASnB,IAAQ0J,IAAKxJ,IAAM,OAEnE,6BAECgJ,EACG,yBAAKlH,QAASwH,EAAYrI,UAAU,QAAQnB,IAAQ2J,IAAMzJ,IAAM,QAEhE,yBAAK8B,QAASwH,EAAYrI,UAAU,SAASnB,IAAQ2J,IAAMzJ,IAAM,OAErE,6BAEA,kBAAC6B,EAAA,EAAD,CACIZ,UAAY,mBACZ0H,UAAcC,IACd/I,GAAY,IACZ6I,MAAY,UACZ5H,QAAY,YACZiB,KAAY,SANhB,W,QC5BG2H,GAfH,WAEV,OACE,kBAAC,IAAD,CAAQC,SAAS,oBACf,yBAAK1I,UAAY,OACf,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO2I,KAAO,QAAajB,UAAcJ,IACzC,kBAAC,IAAD,CAAOqB,KAAO,aAAajB,UAAcE,IACzC,kBAAC,IAAD,CAAOe,KAAO,IAAIC,OAAK,GAAvB,IAA0B,kBAAC,EAAD,MAA1B,KACA,kBAAC,EAAD,SCzBYC,QACW,cAA7BrF,OAAOsF,SAASC,UAEe,UAA7BvF,OAAOsF,SAASC,UAEhBvF,OAAOsF,SAASC,SAASC,MACvB,2DCNNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9E,GACLC,QAAQD,MAAMA,EAAM+E,a,8wEEzI5BtL,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,iC","file":"static/js/main.223658e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssp.d13d6e3c.png\";","module.exports = __webpack_public_path__ + \"static/media/brtf_full-color.6eee08a4.png\";","/**\r\n * Header.js\r\n */\r\nimport React from 'react';\r\nimport cow from'./brtf_full-color.png';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n/**\r\n * The header that is always fixed to the top of the page\r\n */\r\nfunction Header()\r\n{\r\n    return (\r\n        <div style={{backgroundColor: \"#eeeeee\"}}>\r\n            <Link to = \"/\">\r\n            <img src= {cow} alt=\"moo\"/>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport SynchProtocolTitleData from \"./SynchronozationProtocolTitles.json\"\r\nimport swal from 'sweetalert';\r\n\r\nconst ProtocolPage = props => {\r\n    const {\r\n        UserFlow, setUserFlow, \r\n        BreedType, CowOrHeifer, SemenType,\r\n        SystemType, SynchronizationProtocol, setSynchronizationProtocol \r\n    } = props;\r\n    \r\n    let filteredList = [];\r\n    \r\n    //Cow Prefferd #1\r\n    const CP1 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V39\r\n            filteredList.push(7)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SystemType === 2){\r\n                //V48\r\n                filteredList.push(16)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SystemType === 3){\r\n                    //V54\r\n                    filteredList.push(22)\r\n                }\r\n                else{\r\n                    if(BreedType === 1 && SemenType === 1 && SystemType === 4){\r\n                        //V72\r\n                        filteredList.push(40)\r\n                    }\r\n                    else{\r\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 4){\r\n                            //V76\r\n                            filteredList.push(44)\r\n                        }\r\n                        else{\r\n                            if(BreedType === 2 && SemenType === 1 && SystemType === 3){\r\n                                //V69\r\n                                filteredList.push(37)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Cow Prefferd #2\r\n    const CP2 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V46\r\n            filteredList.push(14)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SystemType === 2){\r\n                //V51\r\n                filteredList.push(19)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SystemType === 3){\r\n                    //V61\r\n                    filteredList.push(29)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Cow Prefferd #3\r\n    const CP3 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V66\r\n            filteredList.push(34)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SystemType === 2){\r\n                //V65\r\n                filteredList.push(33)\r\n            }\r\n        }\r\n    }\r\n\r\n    //Cow Less Prefferd #1\r\n    const CLPS1 = () => {\r\n\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V33\r\n            filteredList.push(1)\r\n        }\r\n        else{\r\n            if(BreedType === 1 &&  SystemType === 2){\r\n                //V57\r\n                filteredList.push(25)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SemenType === 1 && SystemType === 3){\r\n                    //V42\r\n                    filteredList.push(10)\r\n                }\r\n                else{\r\n                    if(BreedType === 1 && SemenType === 2 && SystemType === 1){\r\n                        //V39\r\n                        filteredList.push(7)\r\n                    }\r\n                    else{\r\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 2){\r\n                            //V48\r\n                            filteredList.push(16)\r\n                        }\r\n                        else{\r\n                            if(BreedType === 1 && SemenType === 2 && SystemType === 3){\r\n                                //V71\r\n                                filteredList.push(39)\r\n                            }\r\n                            else{\r\n                                if(BreedType === 2){\r\n                                    //AC33\r\n                                    if(SemenType === 1 && SystemType === 1){\r\n                                        //V39\r\n                                        filteredList.push(7)\r\n                                    }\r\n                                    else{\r\n                                        if(SemenType === 1 && SystemType === 2){\r\n                                            //V48\r\n                                            filteredList.push(16)\r\n                                        }\r\n                                        else{\r\n                                            if(SemenType === 1 && SystemType === 3){\r\n                                                //V54\r\n                                                filteredList.push(22)\r\n                                            }\r\n                                            else{\r\n                                                if(SemenType === 2 && SystemType === 3){\r\n                                                    //V69\r\n                                                    filteredList.push(37)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Cow Less Preffered #2\r\n    const CLPS2 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V34\r\n            filteredList.push(2)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SemenType === 1 && SystemType === 3){\r\n                //V45\r\n                filteredList.push(13)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SemenType === 2 && SystemType === 1){\r\n                //V46\r\n                filteredList.push(14)\r\n                }\r\n                else{\r\n                    if(BreedType === 1 && SemenType === 2 && SystemType === 2){\r\n                        //Blank\r\n                    }\r\n                    else{\r\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 3){\r\n                            //Blank\r\n                        }\r\n                        else{\r\n                            if(BreedType === 2){\r\n                                //AC34\r\n                                if(SemenType === 1 && SystemType === 1){\r\n                                    //V46\r\n                                    filteredList.push(14)\r\n                                }\r\n                                else{\r\n                                    if(SemenType === 1 && SystemType === 2){\r\n                                        //V51\r\n                                        filteredList.push(19)\r\n                                    }\r\n                                    else{\r\n                                        if(SemenType === 1 && SystemType === 3){\r\n                                            //V61\r\n                                            filteredList.push(29)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Cow Less Preffered #3\r\n    const CLPS3 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V35\r\n            filteredList.push(3)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SemenType === 1 && SystemType === 3){\r\n                //V67\r\n                filteredList.push(35)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SemenType === 2 && SystemType === 1){\r\n                    //V66\r\n                    filteredList.push(34)\r\n                }\r\n                else{\r\n                    if(BreedType === 2){\r\n                        //AC35\r\n                        if(SemenType === 1 && SystemType === 1){\r\n                            //V66\r\n                            filteredList.push(34)\r\n                        }\r\n                        else{\r\n                            if(SemenType === 1 && SystemType === 2){\r\n                            //V65\r\n                            filteredList.push(33)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } \r\n\r\n    //Cow Less Preffered #4\r\n    const CLPS4 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V47\r\n            filteredList.push(15)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SemenType === 1 && SystemType === 3){\r\n                //V71\r\n                filteredList.push(39)\r\n            }\r\n        }\r\n    }\r\n\r\n    //Heifer Preffered System #1\r\n    const HP1 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V33\r\n            filteredList.push(1)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SystemType === 2){\r\n                //V48\r\n                filteredList.push(16)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SemenType === 1 && SystemType === 3 ){\r\n                    //V55\r\n                    filteredList.push(23)\r\n                }\r\n                else{\r\n\r\n                    if(BreedType === 1 && SemenType === 1 && SystemType === 4 ){\r\n                        //V73\r\n                        filteredList.push(41)\r\n                    }\r\n                    else{\r\n\r\n                        if(BreedType === 1 && SemenType === 2 && SystemType === 4 ){\r\n                            //76\r\n                            filteredList.push(44)\r\n                        }\r\n                        else{\r\n                            if(BreedType === 1 && SemenType === 2 && SystemType === 3 ){\r\n                                //74\r\n                                filteredList.push(42)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Heifer Preffered System #2\r\n    const HP2 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V38\r\n            filteredList.push(6)\r\n        }\r\n        else {\r\n            if(BreedType === 1 && SystemType === 2){\r\n                //V58\r\n                filteredList.push(26)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SystemType === 3){\r\n                    //V59\r\n                    filteredList.push(27)\r\n                }\r\n                else{\r\n                    if(BreedType === 1 && SystemType === 4){\r\n                        //V77\r\n                        filteredList.push(45)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Heifer Preffered System #3\r\n    const HP3 = () => {\r\n        if(BreedType === 1 && SystemType === 1){\r\n            //V47\r\n            filteredList.push(15)\r\n        }\r\n        else {\r\n            if(BreedType === 1 && SystemType === 2){\r\n                //V63\r\n                filteredList.push(31)\r\n            }\r\n            else{\r\n                if(BreedType === 1 && SystemType === 3){\r\n                    //V64\r\n                    filteredList.push(32)\r\n                }\r\n                else{\r\n                    if(BreedType === 1 && SystemType === 4){\r\n                        //78\r\n                        filteredList.push(46)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    //Heifer Preffered System #4\r\n    const HP4 = () => {\r\n        if(BreedType === 1 && SystemType === 3){\r\n            //V70\r\n            filteredList.push(38)\r\n        }\r\n        else{\r\n            if(BreedType === 1 && SystemType === 4){\r\n                //V79\r\n                filteredList.push(47)\r\n            }\r\n        }\r\n    }\r\n    \r\n    //Heifer Preffered System #5\r\n    const HP5 = () => {\r\n        if(BreedType === 1 && SemenType === 2 && SystemType === 3){\r\n            //V75\r\n            filteredList.push(43)\r\n        }\r\n    }\r\n\r\n    //Heifer Less Preffered System #1\r\n    const HLPS1 = () => {\r\n        if(BreedType === 1 && SemenType === 1){\r\n            //AC46\r\n            if(SystemType === 1){\r\n                //V35\r\n                filteredList.push(3)\r\n            }\r\n            else{\r\n                if(SystemType === 3){\r\n                    //V60\r\n                    filteredList.push(28)\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(BreedType === 2){\r\n                //AC39\r\n                if(SystemType === 1){\r\n                    //V33\r\n                    filteredList.push(1)\r\n                }\r\n                else{\r\n                    if(SystemType === 2){\r\n                        //V48\r\n                        filteredList.push(16)\r\n                    }\r\n                    else{\r\n                        if(SystemType === 3){\r\n                            //V55\r\n                            filteredList.push(23)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Heifer Less Preffered System #2\r\n    const HLPS2 = () => {\r\n        if(BreedType === 1 && SemenType === 1){\r\n            //AC47\r\n            if(SystemType === 1){\r\n                //V44\r\n                filteredList.push(12)\r\n            }\r\n            else{\r\n                if(SystemType === 3){\r\n                    //V68\r\n                    filteredList.push(36)\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(BreedType === 2){\r\n                //AC40\r\n                if(SystemType === 1){\r\n                    //V38\r\n                    filteredList.push(6)\r\n                }\r\n                else{\r\n                    if(SystemType === 2){\r\n                        //V58\r\n                        filteredList.push(26)\r\n                    }\r\n                    else{\r\n                        if(SystemType === 3){\r\n                            //V59\r\n                            filteredList.push(27)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Heifer Less Preffered System #3\r\n    const HLPS3 = () => {\r\n        if(BreedType === 1 && SemenType === 1 ){ \r\n            //AC48\r\n            if(SystemType === 1){\r\n                //V46\r\n                filteredList.push(14)\r\n            }\r\n            else{\r\n                if(SystemType === 3){\r\n                    //V75\r\n                    filteredList.push(43)\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(BreedType === 2){\r\n                //AC41\r\n                if(SystemType === 1){\r\n                    //V47\r\n                    filteredList.push(15)\r\n                }\r\n                else{\r\n                    if(SystemType === 2 ){\r\n                        //V63\r\n                        filteredList.push(31)\r\n                    }\r\n                    else{\r\n                        if(SystemType === 3) {\r\n                            //V64\r\n                            filteredList.push(32)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Heifer Less Preffered System #4\r\n    const HLPS4 = () => {\r\n        if(BreedType === 1 && SemenType === 1){\r\n            //AC49\r\n            if( SystemType === 1){\r\n                //V62\r\n                filteredList.push(30)\r\n            }\r\n        }\r\n        else{\r\n            if(BreedType === 2){\r\n                //AC42\r\n                if(SystemType === 1){\r\n                    //V62\r\n                    filteredList.push(30)\r\n                }\r\n                else{\r\n                    if(SystemType === 3){\r\n                        //V69\r\n                        filteredList.push(37)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } \r\n\r\n    const filterProtocols = () => {\r\n        //If working with Cows\r\n        if(CowOrHeifer === 1){\r\n            //7 possible additions\r\n            //Preffered Systems\r\n            CP1();\r\n            CP2();\r\n            CP3();\r\n\r\n            //Less Preffered Systems\r\n            CLPS1();\r\n            CLPS2();\r\n            CLPS3();\r\n            CLPS4();\r\n        }\r\n        \r\n        //If working with Heifers\r\n        if(CowOrHeifer === 2){\r\n            //9 possible additions\r\n            //Preffered Systems\r\n            HP1();\r\n            HP2();\r\n            HP3();\r\n            HP4();\r\n            HP5();\r\n\r\n            //Less Preffered Systems\r\n            HLPS1();\r\n            HLPS2();\r\n            HLPS3();\r\n            HLPS4();\r\n        }\r\n    }\r\n\r\n    filterProtocols();\r\n\r\n    const CheckDataAndSubmit = () =>\r\n    {\r\n        if( SynchronizationProtocol === undefined ){\r\n            swal( \"Select a Protocol to Continue\",{\r\n                icon: \"error\",\r\n              });\r\n        }\r\n        else{\r\n            setUserFlow(UserFlow + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <br />\r\n            <br />\r\n            {/* Select Protocol */}\r\n            <FormControl variant = \"outlined\" >\r\n                <InputLabel>Select Protocol</InputLabel>\r\n                <Select \r\n                    className=\"InputStyle\"\r\n                    value    = { SynchronizationProtocol || undefined  } \r\n                    onChange ={ ( event ) => {setSynchronizationProtocol(event.target.value)}} \r\n                >\r\n                     {filteredList.map( (jsonKey, index) => {\r\n                        return <option key={index} value={jsonKey} >{SynchProtocolTitleData[jsonKey].SynchronizationSystemTitle}</option>      \r\n                    })}\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            <Button \r\n                onClick = {() => {setUserFlow(UserFlow -1)}}\r\n                variant   = \"contained\" \r\n                size      = \"large\"\r\n            >\r\n            Return\r\n            </Button>\r\n\r\n            <Button \r\n                onClick = {() => {CheckDataAndSubmit()}}\r\n                variant   = \"contained\" \r\n                size      = \"large\"\r\n            >\r\n            Submit\r\n            </Button>\r\n        </div>\r\n    );\r\n} /* end ProtocolPage */\r\n\r\nexport default ProtocolPage;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport \"./ListView.css\"\r\nimport pginfo from  \"./pginfo.json\"\r\nimport gnrhinfo from  \"./gnrhinfo.json\"\r\n\r\nconst ListView = props => {\r\n    const { ListOfInstrucitons, DateToStartBreeding, SynchronizationProtocol, GNRH, PG} = props;\r\n    \r\n    const leadingZeroesHours = (DateObject) =>{\r\n        return (DateObject.getHours() < 10 ? '0' : '') + DateObject.getHours();\r\n    }\r\n\r\n    const leadingZeroesMinutes = (DateObject) =>{\r\n        return (DateObject.getMinutes() < 10 ? '0' : '') + (DateObject.getMinutes());\r\n    }\r\n\r\n    const addPGtoSteps = (text) =>{\r\n        if(text === undefined){return ''}\r\n        return(text.replace(\"${PG}\", pginfo[PG]))\r\n    }\r\n    \r\n    const addGNRHtoSteps = (text) =>{    \r\n        if(text === undefined){return ''}    \r\n        return(text.replace(\"${GNRH}\", gnrhinfo[GNRH]))\r\n    }\r\n\r\n    const addTimedEventstoSteps = (text, dateObject) =>{    \r\n        if(text === undefined){return ''}   \r\n        if(text.includes(\"${Time-Edit}\")){\r\n            \r\n            let plusTimeEdit = text.indexOf(\":+:\");\r\n            let exactTimeEdit = text.indexOf(\":::\");\r\n            let timeAdjustment = undefined;\r\n          \r\n            if (exactTimeEdit != -1){\r\n                let analysis = text.substring(exactTimeEdit + 3)\r\n                timeAdjustment = dateObject.getHours() + parseInt(analysis);\r\n                return(`${timeAdjustment}:${leadingZeroesMinutes(dateObject)}`)\r\n            }\r\n            else if (plusTimeEdit != -1){\r\n                let analysis = text.substring(plusTimeEdit + 3)\r\n                timeAdjustment = dateObject.getHours() + parseInt(analysis);\r\n                return (`${timeAdjustment}:${leadingZeroesMinutes(dateObject)}`)\r\n            }\r\n           \r\n        }\r\n        return(text)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Protocol #{SynchronizationProtocol}</h2>\r\n\r\n            <div className=\"centerTable\">\r\n            <table >\r\n                <tr>\r\n                    <th>Date and Time</th>\r\n                    <th>Instructions</th>\r\n                </tr>\r\n                {ListOfInstrucitons.map(instruction => {\r\n                    let tempDate = new Date(DateToStartBreeding)\r\n                    tempDate.setDate(DateToStartBreeding.getDate() + parseInt(instruction.OnDay))\r\n\r\n                    return(\r\n                        <tr >\r\n                            <td>{ tempDate.getMonth() + 1} / { tempDate.getDate() } / { tempDate.getFullYear()} \r\n                            <br/>\r\n                             {leadingZeroesHours(tempDate)}:{leadingZeroesMinutes(tempDate)}</td>\r\n                            <td>\r\n                            <br/>\r\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step1)), tempDate )}<br/>\r\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step2)), tempDate )}<br/>\r\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step3)), tempDate )}<br/>\r\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step4)), tempDate )}<br/>\r\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step5)), tempDate )}<br/>\r\n                                {addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step6)), tempDate )}<br/>\r\n                                <br/>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })} \r\n            </table>\r\n\r\n            </div>\r\n            <br/>\r\n            <Button \r\n                variant   = \"contained\" \r\n                size      = \"large\"\r\n                onClick={() => {\r\n                    window.print()\r\n                }    \r\n            }>\r\n                Print\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListView;","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport ListView from './ListView';\r\nimport ProtocolInstructions from \"./ProtocolInstructions.json\"\r\nimport swal from 'sweetalert';\r\nimport pginfo from  \"./pginfo.json\"\r\nimport gnrhinfo from  \"./gnrhinfo.json\"\r\nconst ics = require('ics')\r\nvar FileSaver = require('file-saver');\r\n\r\n\r\nconst ParentView = props => {\r\n    const {\r\n        UserFlow, setUserFlow, DateToStartBreeding,\r\n        SynchronizationProtocol, \r\n        GNRH, PG, BullTurnIn, GestationPeriod \r\n    } = props;\r\n\r\n    //Variable to determine what page we are on\r\n    const [CalendarOrListView, setCalendarOrListView ] = useState(0)\r\n\r\n    //Text replace within prtocol instructions\r\n    const leadingZeroesMinutes = (DateObject) =>{\r\n        return (DateObject.getMinutes() < 10 ? '0' : '') + (DateObject.getMinutes());\r\n    }\r\n    \r\n    //Text replace within prtocol instructions\r\n    const addPGtoSteps = (text) =>{\r\n        if(text === undefined){return ''}\r\n        return(text.replace(\"${PG}\", pginfo[PG]))\r\n    }\r\n    \r\n    //Text replace within prtocol instructions\r\n    const addGNRHtoSteps = (text) =>{    \r\n        if(text === undefined){return ''}    \r\n        return(text.replace(\"${GNRH}\", gnrhinfo[GNRH]))\r\n    }\r\n\r\n    const addTimedEventstoSteps = (text, dateObject) =>{    \r\n        if(text === undefined){return ''}   \r\n        if(text.includes(\"${Time-Edit}\")){\r\n            \r\n            let plusTimeEdit = text.indexOf(\":+:\");\r\n            let exactTimeEdit = text.indexOf(\":::\");\r\n            let timeAdjustment = undefined;\r\n          \r\n            if (exactTimeEdit != -1){\r\n                let analysis = text.substring(exactTimeEdit + 3)\r\n                timeAdjustment = dateObject.getHours() + parseInt(analysis);\r\n                return(`${timeAdjustment}:${leadingZeroesMinutes(dateObject)}`)\r\n            }\r\n            else if (plusTimeEdit != -1){\r\n                let analysis = text.substring(plusTimeEdit + 3)\r\n                timeAdjustment = dateObject.getHours() + parseInt(analysis);\r\n                return (`${timeAdjustment}:${leadingZeroesMinutes(dateObject)}`)\r\n            }\r\n           \r\n        }\r\n        return(text)\r\n    }\r\n\r\n    //List of instructions for this protocol \r\n    //example protocol 38 has 5 set of instructions for 5 different days \r\n    //these sets are broken down into steps 1 ... 4 \r\n        //Add expected birth date to list of instructions\r\n    let ListOfInstrucitons = [...ProtocolInstructions[SynchronizationProtocol] ,  {\"OnDay\" : GestationPeriod.toString(), \"step1\" : \"Expected Birth Date\" }];    \r\n\r\n    //Add bull turn in day\r\n    let BullTurnInDict = {\"OnDay\" : BullTurnIn.toString() , \"step1\" : \"Bull Turn In Begins \" }\r\n\r\n        //Find where to place Bull Turn In Date in the list of events within protocol\r\n        let TempIndex = 0;\r\n        for(let i = 0; i < ListOfInstrucitons.length; i++){\r\n            if(BullTurnIn < parseInt(ListOfInstrucitons[i].OnDay)){\r\n                TempIndex = i ;\r\n                break;\r\n            }\r\n        }\r\n        ListOfInstrucitons.splice(TempIndex, 0, BullTurnInDict)\r\n\r\n    //Create then download the iCalendar file\r\n    const downloadICS = () =>{\r\n        let listOfEvents = []\r\n\r\n        \r\n        ListOfInstrucitons.map(instruction =>{\r\n\r\n            let tempDate = new Date(DateToStartBreeding)\r\n            tempDate.setDate(DateToStartBreeding.getDate() + parseInt(instruction.OnDay))\r\n\r\n            let description = \r\n                (instruction.step1 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step1)), tempDate )) + \r\n                (instruction.step2 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step2)), tempDate )) +\r\n                (instruction.step3 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step3)), tempDate )) +\r\n                (instruction.step4 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step4)), tempDate )) +\r\n                (instruction.step5 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step5)), tempDate )) +\r\n                (instruction.step6 === undefined ? \"\" : addTimedEventstoSteps(addGNRHtoSteps(addPGtoSteps(instruction.step6)), tempDate )) ;\r\n\r\n\r\n            let eventDictionary = {}\r\n            let ProtocolEventDate = new Date(DateToStartBreeding);\r\n            ProtocolEventDate.setDate(DateToStartBreeding.getDate() + parseInt(instruction.OnDay));\r\n\r\n            //ics.createEvents api arguements found https://www.npmjs.com/package/ics\r\n            eventDictionary[\"title\"] = \"Estrus Event\"\r\n            eventDictionary[\"description\"] = description;\r\n            eventDictionary[\"start\"] = [ProtocolEventDate.getFullYear(), ProtocolEventDate.getMonth() + 1 ,ProtocolEventDate.getDate() ,ProtocolEventDate.getHours() ,ProtocolEventDate.getMinutes()]\r\n            eventDictionary[\"duration\"] = {hours: 1}\r\n            listOfEvents.push(eventDictionary)\r\n\r\n        })\r\n\r\n        const { error, value } = ics.createEvents(listOfEvents)\r\n          \r\n        if (error) {\r\n        swal(error)\r\n        console.log(error)\r\n        return\r\n        }\r\n        //create file then download\r\n        var file = new File([value], \"EstrusScheduleDownload.ics\", {type: \"text/plain;charset=utf-8\"});\r\n        FileSaver.saveAs(file);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <Button \r\n                variant   = \"contained\" \r\n                size      = \"large\"\r\n                onClick={() => {\r\n                    setUserFlow(UserFlow -1)\r\n                }}\r\n            >Back\r\n            </Button>\r\n\r\n            <Button \r\n                variant   = \"contained\" \r\n                size      = \"large\"\r\n                onClick={() => {\r\n                    downloadICS();\r\n                }}\r\n            >Download these Events as an iCalendar file (.ics)\r\n            </Button>\r\n        </div>\r\n\r\n            <ListView \r\n                ListOfInstrucitons = {ListOfInstrucitons}\r\n                DateToStartBreeding={DateToStartBreeding}\r\n                SynchronizationProtocol = {SynchronizationProtocol}\r\n                GNRH={GNRH} \r\n                PG={PG} \r\n                BullTurnIn={BullTurnIn} \r\n                GestationPeriod={GestationPeriod}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ParentView;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport CowOrHeiferData from \"./CowOrHeifer.json\"\r\nimport BreedTypeData from \"./BreedType.json\"\r\nimport SystemTypeData from \"./SystemType.json\"\r\nimport SemenTypeData from \"./SemenType.json\"\r\nimport GNRHData from \"./GNRH.json\"\r\nimport PGData from \"./PG.json\"\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDateTimePicker,\r\n  } from '@material-ui/pickers';\r\n  import DateFnsUtils from '@date-io/date-fns';\r\nimport \"./InitialData.css\"\r\nimport swal from 'sweetalert';\r\n\r\nconst InitialData = props => {\r\n    const {\r\n        UserFlow, setUserFlow, BreedType,\r\n        setBreedType, SemenType, setSemenType,\r\n        CowOrHeifer, setCowOrHeifer,\r\n        SystemType , setSystemType, DateToStartBreeding,\r\n        setDateToStartBreeding, GNRH , setGNRH, PG,\r\n        setPG, BullTurnIn , setBullTurnIn,\r\n        GestationPeriod , setGestationPeriod\r\n    } = props;\r\n\r\n    const CheckDataAndSubmit = () =>\r\n    {\r\n        if(\r\n            BreedType   === undefined ||\r\n            CowOrHeifer === undefined ||\r\n            SemenType   === undefined ||\r\n            SystemType  === undefined ||\r\n            DateToStartBreeding  === undefined ||\r\n            GNRH        === undefined ||\r\n            PG          === undefined ||\r\n            BullTurnIn  === undefined ||\r\n            GestationPeriod  === undefined\r\n        ){\r\n            swal( \"Enter more info\",{\r\n                icon: \"error\",\r\n              });\r\n        }\r\n        else{\r\n            setUserFlow(UserFlow + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome to the Estrus Synchronization Planner</h1>\r\n            <h2>Enter Details Below to Get Started</h2>\r\n            \r\n            {/* Select Cow or Heifer */}\r\n            <FormControl variant = \"outlined\" >\r\n                <InputLabel>Cow or Heifer</InputLabel>\r\n                <Select \r\n                    className=\"InputStyle\"\r\n                    value    = { CowOrHeifer || undefined  } \r\n                    onChange ={ ( event ) => {setCowOrHeifer(event.target.value)}} \r\n                >\r\n                    {Object.keys(CowOrHeiferData).map( (jsonKey, index) => {\r\n                        return <option key={index} value={CowOrHeiferData[jsonKey]} >{jsonKey}</option>      \r\n                    })}\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Select Cow or Heifer */}\r\n            <FormControl variant = \"outlined\" >\r\n                <InputLabel>Semen Type</InputLabel>\r\n                <Select \r\n                    className=\"InputStyle\"\r\n                    value    = { SemenType || undefined  } \r\n                    onChange ={ ( event ) => {setSemenType(event.target.value)}} \r\n                >\r\n                    {Object.keys(SemenTypeData).map( (jsonKey, index) => {\r\n                        return <option key={index} value={SemenTypeData[jsonKey]} >{jsonKey}</option>      \r\n                    })}\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Select Species */}\r\n            <FormControl variant = \"outlined\" >\r\n                <InputLabel>Breed Type</InputLabel>\r\n                <Select \r\n                    className=\"InputStyle\"\r\n                    value    = { BreedType || undefined  } \r\n                    onChange ={ ( event ) => {setBreedType(event.target.value)}} \r\n                >\r\n                    {Object.keys(BreedTypeData).map( (jsonKey, index) => {\r\n                        return <option key={index} value={BreedTypeData[jsonKey]} >{jsonKey}</option>      \r\n                    })}\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Select System Type */}\r\n            <FormControl variant = \"outlined\" >\r\n                <InputLabel>System Type</InputLabel>\r\n                <Select \r\n                    className=\"InputStyle\"\r\n                    value    = { SystemType || undefined  } \r\n                    onChange ={ ( event ) => {setSystemType(event.target.value)}} \r\n                >\r\n                    {Object.keys(SystemTypeData).map( (jsonKey, index) => {\r\n                        return <option key={index} value={SystemTypeData[jsonKey]} >{jsonKey}</option>      \r\n                    })}\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Select GNRH Type */}\r\n            <FormControl variant = \"outlined\" >\r\n                <InputLabel>GNRH</InputLabel>\r\n                <Select \r\n                    className=\"InputStyle\"\r\n                    value    = { GNRH || undefined  } \r\n                    onChange ={ ( event ) => {setGNRH(event.target.value)}} \r\n                >\r\n                    {Object.keys(GNRHData).map( (jsonKey, index) => {\r\n                        return <option key={index} value={GNRHData[jsonKey]} >{jsonKey}</option>      \r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Select PG Type */}\r\n            <FormControl variant = \"outlined\" >\r\n                <InputLabel>PG</InputLabel>\r\n                <Select \r\n                    className=\"InputStyle\"\r\n                    value    = { PG || undefined  } \r\n                    onChange ={ ( event ) => {setPG(event.target.value )}} \r\n                >\r\n                    {Object.keys(PGData).map( (jsonKey, index) => {\r\n                        return <option key={index} value={PGData[jsonKey]} >{jsonKey}</option>      \r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Set Gestation Period */}\r\n            <FormControl variant = \"outlined\">\r\n                <InputLabel>Gestation Period</InputLabel>\r\n                <input \r\n                type=\"number\"\r\n                style={{textAlign:'center'}}\r\n                    className=\"InputStyle\"\r\n                    value    = { GestationPeriod || undefined  } \r\n                    onChange ={ ( event ) => {setGestationPeriod(event.target.value)}} \r\n                />\r\n                </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Set Bull Turn In */}\r\n            <FormControl variant = \"outlined\">\r\n                <InputLabel>Bull Turn In</InputLabel>\r\n                <input \r\n                type=\"number\"\r\n                style={{textAlign:'center'}}\r\n                    className=\"InputStyle\"\r\n                    value    = { BullTurnIn || undefined  } \r\n                    onChange ={ ( event ) => {setBullTurnIn(event.target.value)}} \r\n                />\r\n                </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n            {/* Set Date and Time to start Breeding */}\r\n            <MuiPickersUtilsProvider utils = { DateFnsUtils } >\r\n                <KeyboardDateTimePicker\r\n                    variant     = \"dialogue\"\r\n                    label       = \"Select Intended Start Date\"\r\n                    value       = { DateToStartBreeding }\r\n                    onChange    = { ( value )=> setDateToStartBreeding( new Date(value) ) }\r\n                    format      = \"MM/dd/yyyy hh:mm aa\"\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n            <br />\r\n            <br />\r\n         \r\n            <Button \r\n                onClick = {() => {CheckDataAndSubmit()}}\r\n                variant   = \"contained\" \r\n                size      = \"large\"\r\n            >\r\n            Submit\r\n            </Button>\r\n        </div>\r\n    );\r\n} /* end InitialData */\r\nexport default InitialData;","import React, {useState} from 'react';\r\nimport ProtocolPage from '../ProtocolsPage/ProtocolPage';\r\nimport ParentView from '../ScheduleReview/ParentView';\r\nimport InitialData from '../InitialData/InitialData';\r\n\r\nconst HomePage = () => {\r\n    const [BreedType , setBreedType] = useState(undefined)\r\n    const [CowOrHeifer , setCowOrHeifer] = useState(undefined)\r\n    const [SemenType , setSemenType] = useState(undefined)\r\n    const [SystemType , setSystemType] = useState(undefined)\r\n    const [DateToStartBreeding , setDateToStartBreeding ] = useState(new Date())\r\n    const [GNRH , setGNRH] = useState(undefined)\r\n    const [PG , setPG] = useState(undefined)\r\n    const [BullTurnIn , setBullTurnIn] = useState(14)\r\n    const [GestationPeriod , setGestationPeriod] = useState(281)\r\n    const [UserFlow, setUserFlow] = useState(1);\r\n    const [SynchronizationProtocol, setSynchronizationProtocol] = useState(undefined);\r\n\r\n    if(UserFlow === 1){\r\n        return (\r\n            <InitialData \r\n                BreedType={BreedType}\r\n                CowOrHeifer ={CowOrHeifer}\r\n                SystemType={SystemType}\r\n                SemenType ={SemenType}\r\n                DateToStartBreeding={DateToStartBreeding}\r\n                GNRH={GNRH} \r\n                PG={PG} \r\n                BullTurnIn={BullTurnIn} \r\n                GestationPeriod={GestationPeriod}\r\n                setSemenType={setSemenType}\r\n                setBreedType={setBreedType}\r\n                setCowOrHeifer ={setCowOrHeifer}\r\n                setSystemType={setSystemType}\r\n                setDateToStartBreeding={setDateToStartBreeding} \r\n                setGNRH={setGNRH} \r\n                setPG={setPG} \r\n                setBullTurnIn={setBullTurnIn} \r\n                setGestationPeriod={setGestationPeriod} \r\n                UserFlow={UserFlow}\r\n                setUserFlow = {setUserFlow}\r\n            />\r\n        );\r\n    }\r\n\r\n    if(UserFlow === 2){\r\n        return(\r\n        <ProtocolPage\r\n            BreedType={BreedType}\r\n            SemenType = {SemenType}\r\n            SystemType={SystemType}\r\n            CowOrHeifer ={CowOrHeifer}\r\n            DateToStartBreeding={DateToStartBreeding}\r\n            SynchronizationProtocol = {SynchronizationProtocol}\r\n            setSynchronizationProtocol = {setSynchronizationProtocol}\r\n            UserFlow={UserFlow}\r\n            setUserFlow = {setUserFlow}\r\n         />);\r\n    }\r\n\r\n    if(UserFlow === 3){\r\n        return(\r\n            <ParentView \r\n                UserFlow={UserFlow}\r\n                setUserFlow = {setUserFlow}\r\n                DateToStartBreeding={DateToStartBreeding}\r\n                SynchronizationProtocol = {SynchronizationProtocol}\r\n                GNRH={GNRH} \r\n                PG={PG} \r\n                BullTurnIn={BullTurnIn} \r\n                GestationPeriod={GestationPeriod}\r\n            />\r\n        )\r\n    }\r\n\r\n} /* end HomePage */\r\nexport default HomePage;","/**\r\n *  Footer.js\r\n *  Copyright (C) 2021  Andrew Stene\r\n *\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *   \r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Footer.css';\r\n\r\n/**\r\n * React component that represents the static footer at the \r\n * bottom of the page\r\n */\r\nfunction Footer()\r\n{\r\n    return (\r\n        <div className= \"Footer\">\r\n            <ul>\r\n            <li><Link to = \"/help\" >Help</Link></li>\r\n            <li><Link to = \"/reference\" >Reference</Link></li>\r\n            <li><a href = \"https://beefrepro.org\" >Beef Reproduction Task Force Homepage</a></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n} /* Footer() */\r\nexport default Footer;","import React from \"react\";\r\nimport AbbreviationsData from \"./Abbreviation.json\"\r\n\r\n\r\nconst AbbreviationsTable = () => {\r\n    return(\r\n        <div className=\"centerDiv\">\r\n            <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td><h3>Abbreviation </h3></td>\r\n                    <td><h3>Definition</h3></td>\r\n                </tr>\r\n                {AbbreviationsData.map((item,index) => (\r\n                    <tr key={index} >\r\n                        <td> <strong>{item[0]}</strong> </td>\r\n                        <td> {item[1]} </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AbbreviationsTable","import React from \"react\";\r\nimport DIT from \"./Detection-Insemination-type.json\"\r\n\r\nconst DetectionIneminationTypes = () => {\r\n    return(\r\n        <div className=\"centerDiv\">\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <td><h3>Insemination Type </h3></td>\r\n                    <td><h3>Definition</h3></td>\r\n                </tr>\r\n                {DIT.map((item, index) => (\r\n                    <tr key={index} >\r\n                        <td> <strong>{item[0]}</strong> </td>\r\n                        <td> {item[1]} </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetectionIneminationTypes","import React from \"react\";\r\nimport AbbreviationsData from \"./Abbreviation.json\"\r\n\r\n\r\nconst BreedingTime = () => {\r\n\r\n    const DayToStartBreeding = `This is the day that you wish to start heat detection and AI.  In the case of Fixed-Time AI, this is the day that you wish to inseminate the whole group.`\r\n    const TimeToStartBreeding = `Used with Clean-up AI and Fixed Time AI systems.  The average number of hours between PG administration and insemination should be close to the suggested interval.  Strive for the recommended interval +/- 2 hours.`\r\n    \r\n\r\n    return(\r\n        <div className=\"centerDiv\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><strong>Day to Start Breeding</strong></td>\r\n                        <td>{DayToStartBreeding}</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td><strong>Time to Start Breeding</strong></td>\r\n                        <td>{TimeToStartBreeding}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BreedingTime","/**\r\n *  Help.js\r\n *  Copyright (C) 2021  Andrew Stene, Ben Amos\r\n *\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *   \r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport React , { useState }from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core'\r\nimport AbbreviationsTable from './AbbreviationTable';\r\nimport DetectionIneminationTypes from './DetectionInseminationTypes';\r\nimport BreedingTime from './BreedingTime';\r\n\r\n/**\r\n * React component that implements the help page\r\n */\r\nconst Help = () => {\r\n    \r\n    const [ AbbreviationCollapse, setAbbreviationCollapse] = useState(true)\r\n\r\n    const AbvToggle = () => {\r\n        setAbbreviationCollapse(!AbbreviationCollapse)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>Helpful Tips </h1>\r\n\r\n            <h3>Tips for Abbreviations</h3>\r\n            <Button\r\n               color     = \"defualt\" \r\n               variant   = \"contained\" \r\n               size      = \"Large\" \r\n                onClick={() => {AbvToggle()}}> {AbbreviationCollapse ? \"Close\" : \"View\"} List of Abbreviations</Button>\r\n            <br />\r\n            <br />\r\n            {AbbreviationCollapse ? <AbbreviationsTable /> : null}\r\n\r\n            <h3>Tips for Time</h3>\r\n            <BreedingTime />\r\n\r\n            <h3>Tips for Inemination types</h3>\r\n            <DetectionIneminationTypes />\r\n            <Button \r\n                className = \"sidebysidebutton\" \r\n                component = { Link } \r\n                to        = \"/\"\r\n                color     = \"defualt\" \r\n                variant   = \"contained\" \r\n                size      = \"small\" \r\n            >\r\n                Home\r\n            </Button>\r\n        </>\r\n    );\r\n} \r\nexport default Help;","/**\r\n *  Reference.js\r\n *  Copyright (C) 2021  Andrew Stene, Ben Amos\r\n *\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *   \r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport bp from './bp.png';\r\nimport hp from './hp.png';\r\nimport ssp from './ssp.png'\r\nimport \"./Reference.css\"\r\n\r\n/**\r\n * @function Reference - React component that represents a refernce type page\r\n */\r\nconst  Reference = () =>\r\n{\r\n    const [BPSize, setBPSize] = useState(false)\r\n    const [SSPSize, setSSPSize] = useState(false)\r\n    const [HPSize, setHPSize] = useState(false)\r\n    \r\n    const EnlargeBP = () => {\r\n        setBPSize(!BPSize)\r\n    }\r\n\r\n    const EnlargeHP = () => {\r\n        setHPSize(!HPSize)\r\n    }\r\n\r\n    const EnlargeSSP = () => {\r\n        setSSPSize(!SSPSize)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <h1>Reference Information</h1>\r\n            <h2>Click on the Image to Enlarge</h2>\r\n            {BPSize ? \r\n                <img onClick={EnlargeBP} className=\"large\" src = { bp } alt = \"bp\" />    \r\n                : \r\n                <img onClick={EnlargeBP} className=\"normal\" src = { bp } alt = \"bp\" />    \r\n            }\r\n            <br />\r\n\r\n            {HPSize ? \r\n                <img onClick={EnlargeHP} className=\"large\" src = { hp } alt = \"hp\" />    \r\n                : \r\n                <img onClick={EnlargeHP} className=\"normal\" src = { hp } alt = \"hp\" />    \r\n            }\r\n            <br />\r\n\r\n            {SSPSize ? \r\n                <img onClick={EnlargeSSP} className=\"large\" src = { ssp } alt = \"ssp\" />    \r\n                : \r\n                <img onClick={EnlargeSSP} className=\"normal\" src = { ssp } alt = \"sp\" />    \r\n            }\r\n            <br/>\r\n\r\n            <Button \r\n                className = \"sidebysidebutton\" \r\n                component = { Link } \r\n                to        = \"/\" \r\n                color     = \"defualt\" \r\n                variant   = \"contained\" \r\n                size      = \"small\" \r\n            >\r\n                Home\r\n            </Button>            \r\n        </div>\r\n    );\r\n}\r\nexport default Reference;","/**\r\n *  App.js\r\n *  Copyright (C) 2021  Andrew Stene, Ben Amos\r\n *\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *   \r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n * \r\n * edit: Erick Saenz has modified this application. send me questions at erksterx@gmail.com if you need help\r\n */\r\nimport React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport HomePage from './components/HomePage/HomePage';\r\nimport Footer from './Footer';\r\nimport Help from './components/Help/Help';\r\nimport Reference from './components/Reference/Reference'\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  //Run url router\r\n  return(\r\n    <Router basename='/EstrusFrontEnd/'>\r\n      <div className = \"App\" >\r\n        <Header/>\r\n        <Route path = \"/help\"      component = { Help } />\r\n        <Route path = \"/reference\" component = { Reference } />\r\n        <Route path = \"/\" exact > <HomePage /> </Route>\r\n        <Footer/>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\n} /* end App */\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/**\r\n * index.js\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n/**\r\n * Auto-generated ReactDOM render function \r\n */\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/bp.eb03b4ae.png\";","module.exports = __webpack_public_path__ + \"static/media/hp.d0bb69d2.png\";"],"sourceRoot":""}